[T] .env.example
Relative Path: .env.example
Last Modified: 2025-10-21T19:07:45.6480303Z
====

# database setup
DB_USER=secure_username
DB_PASS=password
DB_NAME=db_data
DB_PORT=26257

# nakama server keys
SOCKET_SERVER_KEY=password
RUNTIME_HTTP_KEY=password
SESSION_ENCRYPTION_KEY=a-32-byte-long-secret-encryption-key
SESSION_REFRESH_ENCRYPTION_KEY=a-32-byte-long-secret-encryption-key

# nakama console access
CONSOLE_USERNAME=secure_username
CONSOLE_PASSWORD=password
CONSOLE_SIGNING_KEY=password

# DEBUG, INFO, WARN, ERROR
NAKAMA_LOG_LEVEL=INFO


[T] .gitignore
Relative Path: .gitignore
Last Modified: 2025-10-21T19:07:45.6490263Z
====

# ts build artifacts
/ts/node_modules
/ts/build

# go build artifacts
*.so
*.a
*.o

# editors 
.vscode/
.idea/

# misc
.DS_Store
Thumbs.db


[T] docker-compose.yml
Relative Path: docker-compose.yml
Last Modified: 2025-10-21T19:07:45.6505336Z
====

version: '3.8'
services:
  cert-init:
    image: 'cockroachdb/cockroach:latest-v23.1'
    env_file: .env
    restart: "no"
    volumes:
      - certs:/certs
    entrypoint: [""]   
    command: [
      "sh", "-c",
      "[ -f /certs/ca.key ] || (
         cockroach cert create-ca --certs-dir=/certs --ca-key=/certs/ca.key && 
         cockroach cert create-node localhost cockroachdb --certs-dir=/certs --ca-key=/certs/ca.key && 
         cockroach cert create-client root --certs-dir=/certs --ca-key=/certs/ca.key
       )"
    ]

  cockroachdb:
    image: 'cockroachdb/cockroach:latest-v23.1'
    command: >
      start
      --certs-dir=/certs 
      --store=attrs=ssd,path=/var/lib/cockroach/
      --listen-addr=0.0.0.0:26257
      --http-addr=0.0.0.0:8080
      --advertise-addr=cockroachdb 
      --join=cockroachdb
    depends_on:
      cert-init:
        condition: service_completed_successfully
    env_file: .env
    volumes:
      - cockroach_data:/var/lib/cockroach
      - certs:/certs
    healthcheck:
      test: ["CMD", "curl", "-f", "--cacert", "/certs/ca.crt", "https://cockroachdb:8080/health?ready=1"]
      interval: 10s
      timeout: 5s
      retries: 5

  db-initializer:
    image: cockroachdb/cockroach:latest-v23.1
    restart: "no"
    depends_on:
      cockroachdb:
        condition: service_healthy
    env_file: .env
    volumes:
      - certs:/certs
    entrypoint: [""]
    command: [
      "sh", "-c",
      "cockroach sql --certs-dir=/certs --host=cockroachdb --execute \"
         CREATE USER IF NOT EXISTS $${DB_USER} WITH PASSWORD '$${DB_PASS}';
         CREATE DATABASE IF NOT EXISTS $${DB_NAME};
         GRANT ALL ON DATABASE $${DB_NAME} TO $${DB_USER};
       \""
      ]
  nakama:
    build:
      context: .
      dockerfile: nakama.Dockerfile
    restart: unless-stopped
    env_file: .env
    depends_on:
      db-initializer:
        condition: service_completed_successfully
    volumes:
      - certs:/certs
    ports:
      - '7349:7349'
      - '7350:7350'
      - '9100:9100'
    healthcheck:
      test: ["CMD", "/nakama/nakama", "healthcheck"]
      interval: 10s
      timeout: 5s
      retries: 5

  prometheus: 
    image: prom/prometheus
    command: ['--config.file=/etc/prometheus/prometheus.yml']
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - '9090:9090'

volumes:
  cockroach_data:
  certs:


[T] nakama-config.yml
Relative Path: nakama-config.yml
Last Modified: 2025-10-21T19:07:45.7403816Z
====

name: block-server
session:
  token_expiry_sec: 14400
metrics:
   prometheus_port: 9100


[T] nakama.Dockerfile
Relative Path: nakama.Dockerfile
Last Modified: 2025-10-21T19:07:45.7413862Z
====

# we need a custom image of nakama that will build and include our modules

# |1| build go modules
# match the version for both heroic images
FROM heroiclabs/nakama-pluginbuilder:3.32.1 AS builder
ENV GO111MODULE on
ENV CGO_ENABLED 1

WORKDIR /_work
COPY ./go .
RUN go build --trimpath --mod=vendor --buildmode=plugin -o ./backend.so

# |2| build ts modules with lightweight builder
FROM node:24-alpine3.21 AS node-builder

WORKDIR /_work
COPY ./ts/package*.json .
RUN npm install

COPY ./ts .
RUN npm run type-check
RUN npm run build

# |3| build final nakama image
# match the version for both heroic images
FROM registry.heroiclabs.com/heroiclabs/nakama:3.32.1

# copy built ts/go modules
COPY --from=builder /_work/backend.so /nakama/data/modules/	
COPY --from=node-builder /_work/build/*.js /nakama/data/modules/

# copy nakama config
COPY ./nakama-config.yml /nakama/data/nakama-config.yml

# nakama entry script
COPY ./entrypoint.sh /nakama/
RUN chmod +x /nakama/entrypoint.sh

# nakama start script
ENTRYPOINT ["/nakama/entrypoint.sh"]

# clear base image CMD
CMD []


[T] prometheus.yml
Relative Path: prometheus.yml
Last Modified: 2025-10-21T19:07:45.7413862Z
====

global:
  scrape_interval: 15s
  evaluation_interval: 15s

scrape_configs:
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']

  - job_name: 'nakama'
    metrics_path: /
    static_configs:
      - targets: ['nakama:9100']


[T] README.md
Relative Path: README.md
Last Modified: 2025-10-21T19:07:45.6490263Z
====

# Backend for my Godot iOS Game

This is the actual backend server for my upcoming iOS game, **[Drop Block!]**, which I built on the latest Godot 4.

This is a production ready setup, not just a dev example. It's all automated with Docker and includes Nakama, a properly configured CockroachDB cluster, and Prometheus for monitoring.

Setup for automated deployment and secured.

### The Setup
*   **Nakama image with TS/Go module support:** The `nakama.Dockerfile` handles compiling both the Go and TypeScript modules and packages them into a clean Nakama image.
    - TypeScript files built using Rollup for optimized bundling
*   **Secure Database:** CockroachDB is set up as a proper cluster with TLS.
    - Does not use `start-single-node` or `--insecure` flag.
*   **Automated DB Init:** Setting up the database certificates and creating the database is automated with two init containers in the `docker-compose.yml`:
    1.  The first one generates the TLS certs using a cockroachdb image and running `cockroach cert create-*`.
    2.  The second waits for the database to be ready utilizing Docker's `depends_on:`, then connects securely to run initial SQL setup.
*   **Monitoring:** Prometheus is set up to scrape Nakama's metrics.

### How to Run It

Requires Docker

1.  Clone the repo
    ```sh
    git clone https://github.com/cra88y/block-server.git
    cd block-server
    ```
2.  Create the real `.env` file
    ```sh
    cp .env.example .env
    ```
    (You can change the password in `.env` if you want.)

3.  Build and deploy
    ```sh
    docker-compose up --build
    ```

Now you'll have the full stack running
*   **Nakama Console:** `localhost:7350`


[T] txtport.ps1
Relative Path: txtport.ps1
Last Modified: 2025-10-27T18:32:21.9822810Z
====

#Requires -Version 5.1

param (
    [string]$SourceRootPath = $PSScriptRoot,  # The root directory to scan
    [string]$OutputFolderName = "TXTport"    # General purpose output folder name
)

# Configure output directory and file paths
$OutputBaseDir = Join-Path -Path (Resolve-Path -LiteralPath $SourceRootPath).ProviderPath -ChildPath $OutputFolderName
$OutputFilePath = Join-Path -Path $OutputBaseDir -ChildPath "all_files_combined.txt"

# Directories and files to exclude
$ExcludedDirNames = @(
    "$OutputFolderName", '.git', '.godot', '.idea', '.svn', '.hg', '.vscode', '.vs', 'node_modules', 'bower_components', 'vendor', 'pycache', '.pytest_cache', '.mypy_cache', '.tox', '.venv', 'venv', 'env', '.env', 'build', 'dist', 'bin', 'obj', 'target', 'out', 'log', 'logs', '.cache', 'temp', 'tmp', 'addons'
)
$ExcludedFileExtensions = @(
    '.exe', '.dll', '.so', '.dylib', '.jar', '.class', '.pyc', '.pyo', '.o', '.a', '.lib', '.xml',
    '.zip', '.tar', '.gz', '.bz2', '.xz', '.rar', '.7z', '.cab', '.iso', '.pck',
    '.png', '.jpg', '.jpeg', '.gif', '.bmp', '.tiff', '.webp', '.svg', '.ico', '.psd', '.ai',
    '.mp3', '.wav', '.ogg', '.aac', '.flac', '.m4a',
    '.mp4', '.mkv', '.mov', '.avi', '.webm', '.flv',
    '.ttf', '.otf', '.woff', '.woff2', '.eot',
    '.pdf', '.doc', '.docx', '.xls', '.xlsx', '.ppt', '.pptx', '.odt', '.ods', '.odp',
    '.db', '.sqlite', '.mdb', '.accdb', '.bak',
    '.lock', '.DS_Store', '.swp', '.swo', '.tmp', '.temp', '.import', '.uid', '.tres', '.git', '.gitingore', '.gitattributes', '.sh', '.editor', '.htm', '.godot', '.gdshader', '.theme', '.gd'
)
$ExcludedFilePathPatterns = @()

# Binary check thresholds
$BinaryCheckPeekBytes = 1024
$BinaryCheckNullThresholdPercent = 10
$BinaryCheckNonPrintableThresholdPercent = 20

# Function: Test if a file is likely binary
function Test-IsLikelyBinary {
    param([string]$FilePath, [int]$PeekBytes = $BinaryCheckPeekBytes, [int]$NullThresholdPercent = $BinaryCheckNullThresholdPercent, [int]$NonPrintableThresholdPercent = $BinaryCheckNonPrintableThresholdPercent)

    try {
        $fileStream = New-Object System.IO.FileStream($FilePath, [System.IO.FileMode]::Open, [System.IO.FileAccess]::Read, [System.IO.FileShare]::ReadWrite)
        $buffer = New-Object byte[] $PeekBytes
        $bytesRead = $fileStream.Read($buffer, 0, $PeekBytes)
        $fileStream.Close()
        $fileStream.Dispose()

        if ($bytesRead -eq 0) { return $false }
        $actualBuffer = $buffer[0..($bytesRead - 1)]

        $nullCount, $nonPrintableCount = 0, 0

        foreach ($byteVal in $actualBuffer) {
            if ($byteVal -eq 0) { $nullCount++ }
            elseif (($byteVal -lt 32 -and $byteVal -notin 9,10,13) -or $byteVal -eq 127) { $nonPrintableCount++ }
        }

        if (($nullCount * 100 / $bytesRead) -gt $NullThresholdPercent) { return $true }
        if (($nonPrintableCount * 100 / $bytesRead) -gt $NonPrintableThresholdPercent) { return $true }
        return $false
    } catch {
        return $true
    }
}

# Initialize Output Directory
if (Test-Path $OutputBaseDir) {
    Write-Warning "Output directory '$OutputBaseDir' already exists. Clearing it."
    try { Get-ChildItem -Path $OutputBaseDir -Recurse | Remove-Item -Recurse -Force -ErrorAction Stop }
    catch { Write-Error "Failed to clear output directory '$OutputBaseDir': $_"; exit 1 }
} else {
    New-Item -ItemType Directory -Path $OutputBaseDir -Force -ErrorAction Stop | Out-Null
}

Write-Host "Starting Universal File to .txt Conversion..."
Write-Host "Source Root: $SourceRootPath"
Write-Host "Output will be saved to: $OutputBaseDir"
Write-Host "Scanning project files (this might take a while for large projects)..."

# Get all files recursively
$AllFiles = Get-ChildItem -Path $SourceRootPath -Recurse -File -Force -ErrorAction SilentlyContinue

$ScriptStartTime = Get-Date
$OutputContent = [System.Collections.Generic.List[string]]::new()

foreach ($file in $AllFiles) {
    $RelativePath = $file.FullName.Substring($SourceRootPath.Length).TrimStart([System.IO.Path]::DirectorySeparatorChar)

    # Check if in an excluded directory
    $parentDirToCheck = $file.DirectoryName
    $isDirExcluded = $false
    while ($parentDirToCheck.Length -ge $SourceRootPath.Length) {
        if ($ExcludedDirNames -icontains (Split-Path -Path $parentDirToCheck -Leaf)) {
            $isDirExcluded = $true; break
        }
        if ($parentDirToCheck -eq $SourceRootPath.TrimEnd([System.IO.Path]::DirectorySeparatorChar)) { break }
        $parentDirToCheck = Split-Path -Path $parentDirToCheck -Parent
    }

    if ($isDirExcluded) {
        continue
    }

    # Check if extension is excluded
    if ($ExcludedFileExtensions -icontains $file.Extension.ToLowerInvariant()) {
        continue
    }

    # Check if path matches an excluded pattern
    if ($ExcludedFilePathPatterns) {
        $pathMatchesPattern = $false
        foreach ($pattern in $ExcludedFilePathPatterns) {
            if ($file.FullName -match $pattern) {
                $pathMatchesPattern = $true; break
            }
        }
        if ($pathMatchesPattern) {
            continue
        }
    }

    # Get relative path
    $RelativePath = $file.FullName.Substring($SourceRootPath.Length).TrimStart([System.IO.Path]::DirectorySeparatorChar)
    $isLikelyBinary = Test-IsLikelyBinary -FilePath $file.FullName

    if ($isLikelyBinary) {
        $OutputContent.Add("[B] $RelativePath")
        continue
    }

    # If not binary, attempt to convert
    try {
        $fileContent = Get-Content -Path $file.FullName -Raw -Encoding Default -ErrorAction Stop
        $OutputContent.Add("[T] $RelativePath")
        $OutputContent.Add("Relative Path: $RelativePath")
        $OutputContent.Add("Last Modified: $($file.LastWriteTimeUtc.ToString('o'))")
        $OutputContent.Add("====")
        $OutputContent.Add("")
        $OutputContent.Add($fileContent)
        $OutputContent.Add("")  # Separator between files
    } catch {
        $OutputContent.Add("[E] $RelativePath")
        $OutputContent.Add("   [!] ERROR processing: $_")
        $OutputContent.Add("")  # Separator between files
    }
}

# Write combined file
$OutputContent | Set-Content -Path $OutputFilePath -Encoding UTF8 -Force -ErrorAction Stop
$ScriptEndTime = Get-Date
$Duration = $ScriptEndTime - $ScriptStartTime

Write-Host "Conversion Complete!"
Write-Host "Total files scanned: $($AllFiles.Count)"
Write-Host "Structure map and converted files are in: $OutputFilePath"
Write-Host "Script execution time: $($Duration.ToString())"


[T] go\example_rpc.go.example
Relative Path: go\example_rpc.go.example
Last Modified: 2025-10-21T20:43:05.0937003Z
====

//////////////// Generic RPC
//////////////// http://127.0.0.1:7350/v2/rpc/authoritative_write_rpc
//////////////// Hook
// if err = initializer.RegisterRpc("authoritative_write_rpc", AuthoritativeWriteRPC); err != nil {
//   logger.Error("Unable to register: %v", err)
// 	return err
// }
//
//////////////// Callback
// func AuthoritativeWriteRPC(ctx context.Context,
// 							logger runtime.Logger,
// 							db *sql.DB,
// 							nk runtime.NakamaModule,
// 							payload string)
// (string, error) {
// 	userID, _ := ctx.Value(runtime.RUNTIME_CTX_USER_ID).(string)

// 	data := map[string]interface{}{
// 		"achievementPoints": 100,
// 		"unlockedAchievements": []string{"max-level", "defeat-boss-2", "equip-rare-gear"},
// 	}
//
// 	bytes, err := json.Marshal(data)
// 	if err != nil {
// 		return "", runtime.NewError("error marshaling data", 13)
// 	}
//
// 	write := &runtime.StorageWrite{
// 		Collection:      "Unlocks",
// 		Key:             "Achievements",
// 		UserID:          userID,
// 		Value:           string(bytes),
// 		PermissionRead:  1, // Only the server and owner can read
// 		PermissionWrite: 0, // Only the server can write
// 	}
//
// 	_, err = nk.StorageWrite(ctx, []*runtime.StorageWrite{write})
// 	if err != nil {
// 		return "", runtime.NewError("error saving data", 13)
// 	}
//
// 	return "<JsonResponse>", nil
// }


[T] go\go.mod
Relative Path: go\go.mod
Last Modified: 2025-10-26T21:30:44.7384491Z
====

module block-server

go 1.25.0

require (
	github.com/heroiclabs/nakama-common v1.42.1
	google.golang.org/protobuf v1.36.8
)


[T] go\go.sum
Relative Path: go\go.sum
Last Modified: 2025-10-21T19:07:45.6515413Z
====

github.com/heroiclabs/nakama-common v1.42.1 h1:C7Ky7V74MJv/mjsMMJPqK7HdysX6iByalQ3H7qLp3iQ=
github.com/heroiclabs/nakama-common v1.42.1/go.mod h1:E4yiMQmn8KHQ77WqBLVUfazdiPnwFYWqUrfGOrqOXk8=
google.golang.org/protobuf v1.36.8 h1:xHScyCOEuuwZEc6UtSOvPbAT4zRh0xcNRYekJwfqyMc=
google.golang.org/protobuf v1.36.8/go.mod h1:fuxRtAxBytpl4zzqUh6/eyUujkJdNiuEkXntxiD/uRU=


[T] go\main.go
Relative Path: go\main.go
Last Modified: 2025-10-27T01:14:33.9522461Z
====

package main

import (
	"context"
	"database/sql"
	"time"

	"block-server/items"
	"block-server/session"

	"github.com/heroiclabs/nakama-common/runtime"
)

const (
	rpcIdRewards = "rewards"
)

func InitModule(ctx context.Context, logger runtime.Logger, db *sql.DB, nk runtime.NakamaModule, initializer runtime.Initializer) error {
	initStart := time.Now()
	if err := items.LoadGameData(); err != nil {
		logger.Error("Failed to load game data: %v", err)
		return err
	}
	logger.Info("Loaded game data: %d pets, %d classes, %d backgrounds, %d styles, %d level trees",
		len(items.GameData.Pets),
		len(items.GameData.Classes),
		len(items.GameData.Backgrounds),
		len(items.GameData.PieceStyles),
		len(items.GameData.LevelTrees))
	// after first time player init
	if err := initializer.RegisterAfterAuthenticateDevice(items.AfterAuthroizeUserDevice); err != nil {
		logger.Error("Unable to register: %v", err)
		return err
	}
	if err := initializer.RegisterAfterAuthenticateGameCenter(items.AfterAuthroizeUserGC); err != nil {
		logger.Error("Unable to register: %v", err)
		return err
	}
	if err := initializer.RegisterRpc("get_inventory", items.RpcGetInventory); err != nil {
		logger.Error("Unable to register: %v", err)
		return err
	}
	if err := initializer.RegisterRpc("get_equipment", items.RpcGetEquipment); err != nil {
		logger.Error("Unable to register: %v", err)
		return err
	}
	if err := initializer.RegisterRpc("get_progression", items.RpcGetProgression); err != nil {
		logger.Error("Unable to register: %v", err)
		return err
	}
	if err := session.RegisterSessionEvents(db, nk, initializer); err != nil {
		logger.Error("Unable to register: %v", err)
		return err
	}
	logger.Info("Plugin loaded in '%d' msec.", time.Since(initStart).Milliseconds())
	return nil
}


[T] go\README.md
Relative Path: go\README.md
Last Modified: 2025-10-22T19:45:35.8775375Z
====

# Nakama Go Modules
Built automatically in Dockerfile

Use `go mod vendor` if dependencies change.

Built with `go build --trimpath --mod=vendor --buildmode=plugin -o ./backend.so`


[T] go\errors\errors.go
Relative Path: go\errors\errors.go
Last Modified: 2025-10-27T02:37:29.8088430Z
====

package errors

import (
	"github.com/heroiclabs/nakama-common/runtime"
)

// common Error defs 13 = internal, 3 = invalid argument
var (
	ErrInternalError  = runtime.NewError("internal server error", 13) // INTERNAL
	ErrMarshal        = runtime.NewError("cannot marshal type", 13)
	ErrNoInputAllowed = runtime.NewError("no input allowed", 3)
	ErrNoUserIdFound  = runtime.NewError("no user ID in context", 3)
	ErrUnmarshal      = runtime.NewError("cannot unmarshal type", 13)

	ErrNoCategory       = runtime.NewError("invalid category", 13)
	ErrInvalidItem      = runtime.NewError("invalid item", 13)
	ErrInvalidLevelTree = runtime.NewError("level tree doesnt exist", 13)
	ErrParse            = runtime.NewError("error parsing value", 13)
	ErrInvalidInput     = runtime.NewError("Invalid request", 3)
	ErrNotOwned         = runtime.NewError("Item not owned", 3)
	ErrInventoryFailure = runtime.NewError("Inventory system error", 13)
)


[T] go\items\daily_drops.go
Relative Path: go\items\daily_drops.go
Last Modified: 2025-10-27T02:49:47.7185101Z
====

package items

import (
	"context"
	"database/sql"
	"encoding/json"
	"time"

	"block-server/errors"

	"github.com/heroiclabs/nakama-common/api"
	"github.com/heroiclabs/nakama-common/runtime"
)

const (
	storageCollectionDrops = "drops"
	storageKeyDaily        = "daily"
	walletKeyDropsLeft     = "dropsLeft"
	maxDrops               = 5
	dailyDropGrantCount    = 3
)

type dailyDrops struct {
	LastClaimUnix int64 `json:"last_claim_unix"` // The last time the user claimed the daily drops in UNIX time.
}

func RpcCanClaimDailyDrops(ctx context.Context, logger runtime.Logger, db *sql.DB, nk runtime.NakamaModule, payload string) (string, error) {
	var resp struct {
		CanClaimDailyDrops bool `json:"canClaimDailyDrops"`
	}

	dailyDropsState, _, err := getDailyDropsState(ctx, logger, nk)
	if err != nil {
		logger.Error("Error getting daily drops: %v", err)
		return "", errors.ErrInternalError
	}

	resp.CanClaimDailyDrops = canUserClaimDailyDrops(dailyDropsState)

	respBytes, err := json.Marshal(resp)
	if err != nil {
		logger.Error("Marshal error: %v", err)
		return "", errors.ErrMarshal
	}

	logger.Debug("RpcCanClaimDailyDrops resp: %v", string(respBytes))
	return string(respBytes), nil
}

func TryClaimDailyDrops(ctx context.Context, logger runtime.Logger, nk runtime.NakamaModule) error {

	// get UserID from context
	userID, ok := ctx.Value(runtime.RUNTIME_CTX_USER_ID).(string)

	// reject if not from valid client
	if !ok {
		return errors.ErrNoUserIdFound
	}

	var resp struct {
		DropsLeft int64 `json:"dropsLeft"`
	}
	resp.DropsLeft = int64(0)

	// get current dailyDrops state
	dailyDropsState, dropsStorageObj, err := getDailyDropsState(ctx, logger, nk)
	if err != nil {
		return err
	}

	// get account data
	account, err := nk.AccountGetId(ctx, userID)
	if err != nil {
		logger.Error("AccountGetId error: %v", err)
		return runtime.NewError("could not get user account", 13)
	}

	// get drops total before
	currentDropsBefore := int64(0)

	var wallet map[string]int64
	if err := json.Unmarshal([]byte(account.Wallet), &wallet); err != nil {
		logger.Error("Unmarshal error: %v", err)
		return errors.ErrUnmarshal
	}
	drops, ok := wallet[walletKeyDropsLeft]
	if !ok {
		logger.Error("wallet JSON is valid but missing required key: %s", walletKeyDropsLeft)
	}
	currentDropsBefore = drops

	// check if user has already claimed
	if !canUserClaimDailyDrops(dailyDropsState) {
		logger.Debug("User has already claimed daily drop today.")
		resp.DropsLeft = currentDropsBefore
		// out, _ := json.Marshal(resp)
		return runtime.NewError("drops already claimed for user", 13)
	}
	newTotalDrops, err := grantCappedDrops(ctx, logger, nk, userID, dailyDropGrantCount)
	if err != nil {
		logger.Error("wallet JSON is valid but missing required key (%s): %v", walletKeyDropsLeft, err)
	}

	// grant drops
	resp.DropsLeft = newTotalDrops
	// calc amount actually granted
	//amountActuallyGranted := newTotalDrops - currentDropsBefore
	// send user notification
	// 	err := nk.NotificationsSend(ctx, []*runtime.NotificationSend{{
	// 		Code: 1001,
	// 		Content: map[string]interface{}{
	// 			"dropsLeft": changeset["dropsLeft"],
	// 		},
	// 		Persistent: true,
	// 		Sender:     "", // sent by server
	// 		Subject:    "Daily drops granted!",
	// 		UserID:     userID,
	// 	}})
	// 	if err != nil {
	// 		logger.Error("NotificationsSend error: %v", err)
	// 		return "", errors.ErrInternalError
	// 	}
	// write current time to dailyDrops
	dailyDropsState.LastClaimUnix = time.Now().UTC().Unix()
	// marshall the response object
	dailyDropsBytes, err := json.Marshal(dailyDropsState)
	if err != nil {
		logger.Error("Marshal error: %v", err)
		return errors.ErrMarshal
	}
	// OCC/optimistic locking to prevent concurrent writes
	version := ""
	if dropsStorageObj != nil {
		version = dropsStorageObj.GetVersion()
	}
	// Update daily drops storage object for user.
	_, err = nk.StorageWrite(ctx, []*runtime.StorageWrite{{
		Collection:      storageCollectionDrops,
		Key:             storageKeyDaily,
		PermissionRead:  1, // user access only
		PermissionWrite: 0, // no client writes
		Value:           string(dailyDropsBytes),
		Version:         version,
		UserID:          userID,
	}})
	if err != nil {
		logger.Error("StorageWrite error: %v", err)
		return errors.ErrInternalError
	}

	// out, err := json.Marshal(resp)
	// if err != nil {
	// 	logger.Error("Marshal error: %v", err)
	// 	return errors.ErrMarshal
	// }

	logger.Debug("ClaimDailyDrops compelted for user: %v", userID)
	return nil
}

// get last daily drop object
func getDailyDropsState(ctx context.Context, logger runtime.Logger, nk runtime.NakamaModule) (dailyDrops, *api.StorageObject, error) {
	var data dailyDrops
	data.LastClaimUnix = 0 // Default for new users

	userID, ok := ctx.Value(runtime.RUNTIME_CTX_USER_ID).(string)
	if !ok {
		return data, nil, runtime.NewError("user ID not found", 3)
	}

	objects, err := nk.StorageRead(ctx, []*runtime.StorageRead{{
		Collection: storageCollectionDrops,
		Key:        storageKeyDaily,
		UserID:     userID,
	}})
	if err != nil {
		logger.Error("StorageRead error: %v", err)
		return data, nil, runtime.NewError("could not read storage", 13)
	}

	if len(objects) == 0 {
		return data, nil, nil // New user case
	}

	storageObj := objects[0]
	if err := json.Unmarshal([]byte(storageObj.GetValue()), &data); err != nil {
		logger.Error("Unmarshal error: %v", err)
		return data, nil, runtime.NewError("could not unmarshal storage data", 13)
	}

	return data, storageObj, nil
}

// grant drops up to the cap
func grantCappedDrops(ctx context.Context, logger runtime.Logger, nk runtime.NakamaModule, userID string, amountToAdd int64) (int64, error) {
	account, err := nk.AccountGetId(ctx, userID)
	if err != nil {
		logger.Error("AccountGetId error: %v", err)
		return 0, runtime.NewError("could not get user account", 13)
	}
	// get the current number of drops from the wallet
	// get drops total before
	currentDropsBefore := int64(0)

	var wallet map[string]int64
	if err := json.Unmarshal([]byte(account.Wallet), &wallet); err != nil {
		logger.Error("Unmarshal error: %v", err)
		return 0, errors.ErrUnmarshal
	}
	drops, ok := wallet[walletKeyDropsLeft]
	if !ok {
		logger.Error("wallet JSON is valid but missing required key: %s", walletKeyDropsLeft)
	}
	currentDropsBefore = drops
	// determine how many drops can granted
	spaceAvailable := maxDrops - currentDropsBefore
	if spaceAvailable <= 0 {
		logger.Info("User '%s' already at or over drop cap. No drops granted. Current total: %d", userID, currentDropsBefore)
		return currentDropsBefore, nil // No space, no drops granted, currentDrops returned
	}
	// clamp to space available
	dropsToGrant := amountToAdd
	if dropsToGrant > spaceAvailable {
		dropsToGrant = spaceAvailable
	}
	// update wallet
	changeset := map[string]int64{
		walletKeyDropsLeft: dropsToGrant,
	}
	if _, _, err := nk.WalletUpdate(ctx, userID, changeset, map[string]interface{}{}, false); err != nil {
		logger.Error("WalletUpdate error: %v", err)
		return 0, runtime.NewError("could not update wallet", 13)
	}
	//return new current drops total
	newTotalDrops := currentDropsBefore + dropsToGrant
	logger.Info("Granted %d drops to user '%s'. New total: %d.", dropsToGrant, userID, newTotalDrops)
	return newTotalDrops, nil
}

// check the last claimed time was before midnight
func canUserClaimDailyDrops(d dailyDrops) bool {
	nowUTC := time.Now().UTC()
	midnightUTC := time.Date(nowUTC.Year(), nowUTC.Month(), nowUTC.Day(), 0, 0, 0, 0, time.UTC)
	lastClaimTime := time.Unix(d.LastClaimUnix, 0).UTC()
	return lastClaimTime.Before(midnightUTC)
}


[T] go\items\initialize_user.go
Relative Path: go\items\initialize_user.go
Last Modified: 2025-10-27T03:56:31.1086745Z
====

package items

import (
	"context"
	"database/sql"
	"fmt"

	"github.com/heroiclabs/nakama-common/api"
	"github.com/heroiclabs/nakama-common/runtime"
)

const (
	DefaultPetID        = 0
	DefaultClassID      = 0
	DefaultBackgroundID = 0
	DefaultPieceStyleID = 0

	WhiteoutPieceStyleID = 8
)

func AfterAuthroizeUserGC(ctx context.Context, logger runtime.Logger, db *sql.DB, nk runtime.NakamaModule, out *api.Session, in *api.AuthenticateGameCenterRequest) error {

	if err := InitializeUser(ctx, logger, db, nk, out); err != nil {
		logger.Error("User initialization failed: %v", err)
		return err
	}
	return nil
}

func AfterAuthroizeUserDevice(ctx context.Context, logger runtime.Logger, db *sql.DB, nk runtime.NakamaModule, out *api.Session, in *api.AuthenticateDeviceRequest) error {

	if err := InitializeUser(ctx, logger, db, nk, out); err != nil {
		logger.Error("User initialization failed: %v", err)
		return err
	}
	return nil
}

// Initialize user wallet / items
func InitializeUser(ctx context.Context, logger runtime.Logger, db *sql.DB, nk runtime.NakamaModule, out *api.Session) error {
	if !out.Created {
		return nil
	}

	userID, _ := ctx.Value(runtime.RUNTIME_CTX_USER_ID).(string)

	// wallet
	changeset := map[string]int64{
		"gold":      500,
		"gems":      100,
		"treats":    1,
		"dropsLeft": 0,
	}
	if _, _, err := nk.WalletUpdate(ctx, userID, changeset, map[string]interface{}{}, true); err != nil {
		logger.WithFields(map[string]interface{}{
			"user":   userID,
			"wallet": changeset,
			"error":  err.Error(),
		}).Error("Wallet initialization failed")
		return fmt.Errorf("wallet setup error: %w", err)
	}

	// Grant default items
	if err := GivePet(ctx, nk, logger, userID, DefaultPetID); err != nil {
		return err
	}
	if err := GiveClass(ctx, nk, logger, userID, DefaultClassID); err != nil {
		return err
	}
	if err := GiveBackground(ctx, nk, logger, userID, DefaultBackgroundID); err != nil {
		return err
	}
	if err := GivePieceStyle(ctx, nk, logger, userID, DefaultPieceStyleID); err != nil {
		return err
	}
	if err := GivePieceStyle(ctx, nk, logger, userID, WhiteoutPieceStyleID); err != nil {
		return err
	}

	// Equip defaults
	return EquipDefaults(ctx, nk, userID)
}


[T] go\items\items.go
Relative Path: go\items\items.go
Last Modified: 2025-10-27T03:56:20.8439349Z
====

package items

import (
	"context"
	"encoding/json"
	"fmt"
	"strconv"

	"block-server/errors"

	"github.com/heroiclabs/nakama-common/runtime"
)

func GetItemProgression(ctx context.Context, nk runtime.NakamaModule,
	userID string, keyPrefix string, itemID uint32) (*ItemProgression, error) {

	key := fmt.Sprintf("%s%d", keyPrefix, itemID)
	objects, err := nk.StorageRead(ctx, []*runtime.StorageRead{
		{
			Collection: storageCollectionProgression,
			Key:        key,
			UserID:     userID,
		},
	})
	if err != nil {
		return nil, err
	}

	prog := &ItemProgression{}
	if len(objects) > 0 {
		if err := json.Unmarshal([]byte(objects[0].Value), prog); err != nil {
			return nil, err
		}
		prog.Version = objects[0].Version
	}
	return prog, nil
}
func SaveItemProgression(ctx context.Context, nk runtime.NakamaModule, logger runtime.Logger, userID string, ProgressionKey string, itemID uint32, prog *ItemProgression) error {

	key := ProgressionKey + strconv.Itoa(int(itemID))

	value, err := json.Marshal(prog)
	if err != nil {
		logger.Error("error saving item progression %v", err)
		return errors.ErrMarshal
	}

	_, err = nk.StorageWrite(ctx, []*runtime.StorageWrite{
		{
			Collection:      storageCollectionProgression,
			Key:             key,
			UserID:          userID,
			Value:           string(value),
			Version:         prog.Version,
			PermissionRead:  2,
			PermissionWrite: 0,
		},
	})
	return err
}

func CalculateLevel(treeName string, exp int) (int, error) {
	tree, exists := GetLevelTree(treeName)
	if !exists {
		return 0, errors.ErrInvalidLevelTree
	}

	if exp < 0 {
		return 1, nil
	}

	if exp >= tree.LevelThresholds[tree.MaxLevel] {
		return tree.MaxLevel, nil
	}

	thresholds := tree.LevelThresholds
	low, high := 1, tree.MaxLevel
	if len(thresholds) < high {
		return 0, runtime.NewError("invalid level thresholds", 3)
	}
	// binary search for threshold
	for low <= high {
		mid := (low + high) / 2
		if exp >= thresholds[mid] {
			low = mid + 1
		} else {
			high = mid - 1
		}
	}

	return high, nil
}

func GetPet(id uint32) (*Pet, bool) {
	pet, exists := GameData.Pets[id]
	return pet, exists
}

func GetClass(id uint32) (*Class, bool) {
	class, exists := GameData.Classes[id]
	return class, exists
}

func GetLevelTree(name string) (LevelTree, bool) {
	tree, exists := GameData.LevelTrees[name]
	return tree, exists
}

func GetPetLevelTree(petID uint32) (LevelTree, bool) {
	if pet, exists := GetPet(petID); exists {
		return GetLevelTree(pet.LevelTreeName)
	}
	return LevelTree{}, false
}

func GetClassLevelTree(classID uint32) (LevelTree, bool) {
	if class, exists := GetClass(classID); exists {
		return GetLevelTree(class.LevelTreeName)
	}
	return LevelTree{}, false
}

func GetLevelTreeName(category string, id uint32) (string, error) {
	switch category {
	case storageKeyPet:
		if pet, exists := GameData.Pets[id]; exists {
			return pet.LevelTreeName, nil
		}
	case storageKeyClass:
		if class, exists := GameData.Classes[id]; exists {
			return class.LevelTreeName, nil
		}
	default:
		return "", errors.ErrNoCategory
	}
	return "", errors.ErrInvalidItem
}

func ValidateItemExists(category string, id uint32) bool {
	switch category {
	case storageKeyPet:
		_, exists := GameData.Pets[id]
		return exists
	case storageKeyClass:
		_, exists := GameData.Classes[id]
		return exists
	case storageKeyBackground:
		_, exists := GameData.Backgrounds[id]
		return exists
	case storageKeyPieceStyle:
		_, exists := GameData.PieceStyles[id]
		return exists
	default:
		return false
	}
}


[T] go\items\loader.go
Relative Path: go\items\loader.go
Last Modified: 2025-10-27T03:56:17.7321001Z
====

package items

import (
	_ "embed"
	"encoding/json"
	"fmt"
	"strconv"
	"sync"
)

//go:embed gamedata/items.json
var gamedata []byte

var (
	GameData     *GameDataStuct
	GameDataOnce sync.Once
)

func LoadGameData() error {
	var initErr error
	var parseErrors []error
	GameDataOnce.Do(func() {
		var raw struct {
			Pets        map[string]Pet        `json:"pets"`
			Classes     map[string]Class      `json:"classes"`
			Backgrounds map[string]Background `json:"backgrounds"`
			PieceStyles map[string]PieceStyle `json:"piece_styles"`
			LevelTrees  map[string]LevelTree  `json:"level_trees"`
		}

		if err := json.Unmarshal(gamedata, &raw); err != nil {
			initErr = err
			return
		}

		GameData = &GameDataStuct{
			Pets:        make(map[uint32]*Pet, len(raw.Pets)),
			Classes:     make(map[uint32]*Class, len(raw.Classes)),
			Backgrounds: make(map[uint32]Background, len(raw.Backgrounds)),
			PieceStyles: make(map[uint32]PieceStyle, len(raw.PieceStyles)),
			LevelTrees:  make(map[string]LevelTree, len(raw.LevelTrees)),
		}

		// Level trees
		for name, tree := range raw.LevelTrees {
			t := tree
			t.LevelThresholds = make([]int, t.MaxLevel+1)
			cumulative := 0
			for level := 1; level <= t.MaxLevel; level++ {
				cumulative += t.BaseXP * level * level
				t.LevelThresholds[level] = cumulative
			}
			GameData.LevelTrees[name] = t
		}

		// Pets
		for k, v := range raw.Pets {
			id, err := strconv.ParseUint(k, 10, 32)
			if err != nil {
				parseErrors = append(parseErrors, fmt.Errorf("invalid pet ID %q: %w", k, err))
				continue
			}
			GameData.Pets[uint32(id)] = &Pet{
				Name:          v.Name,
				SpriteCount:   v.SpriteCount,
				AbilityIDs:    v.AbilityIDs,
				AbilitySet:    createAbilitySet(v.AbilityIDs),
				BackgroundIDs: v.BackgroundIDs,
				StyleIDs:      v.StyleIDs,
				LevelTreeName: v.LevelTreeName,
			}
		}

		// Classes
		for k, v := range raw.Classes {
			id, err := strconv.ParseUint(k, 10, 32)
			if err != nil {
				parseErrors = append(parseErrors, fmt.Errorf("invalid class ID %q: %w", k, err))
				continue
			}
			GameData.Classes[uint32(id)] = &Class{
				Name:          v.Name,
				SpriteCount:   v.SpriteCount,
				AbilityIDs:    v.AbilityIDs,
				AbilitySet:    createAbilitySet(v.AbilityIDs),
				BackgroundIDs: v.BackgroundIDs,
				StyleIDs:      v.StyleIDs,
				LevelTreeName: v.LevelTreeName,
			}
		}

		// Backgrounds
		for k, v := range raw.Backgrounds {
			id, err := strconv.ParseUint(k, 10, 32)
			if err != nil {
				parseErrors = append(parseErrors, fmt.Errorf("invalid background ID %q: %w", k, err))
				continue
			}
			GameData.Backgrounds[uint32(id)] = v
		}

		// Piece Styles
		for k, v := range raw.PieceStyles {
			id, err := strconv.ParseUint(k, 10, 32)
			if err != nil {
				parseErrors = append(parseErrors, fmt.Errorf("invalid piece style ID %q: %w", k, err))
				continue
			}
			GameData.PieceStyles[uint32(id)] = v
		}
	})

	if len(parseErrors) > 0 {
		initErr = fmt.Errorf("%d parse errors: %+v", len(parseErrors), parseErrors)
	}
	return initErr
}

func createAbilitySet(ids []uint32) map[uint32]struct{} {
	set := make(map[uint32]struct{})
	for _, id := range ids {
		set[id] = struct{}{}
	}
	return set
}


[T] go\items\player_inventory.go
Relative Path: go\items\player_inventory.go
Last Modified: 2025-10-27T03:56:12.9092654Z
====

package items

import (
	"context"
	"encoding/json"
	"math"

	"block-server/errors"

	"github.com/heroiclabs/nakama-common/runtime"
)

func EquipDefaults(ctx context.Context, nk runtime.NakamaModule, userID string) error {
	reads := []*runtime.StorageRead{
		{Collection: storageCollectionEquipment, Key: storageKeyPet, UserID: userID},
		{Collection: storageCollectionEquipment, Key: storageKeyClass, UserID: userID},
		{Collection: storageCollectionEquipment, Key: storageKeyBackground, UserID: userID},
		{Collection: storageCollectionEquipment, Key: storageKeyPieceStyle, UserID: userID},
	}

	objects, _ := nk.StorageRead(ctx, reads)
	writes := make([]*runtime.StorageWrite, 0, 4)

	for i, key := range []string{storageKeyPet, storageKeyClass, storageKeyBackground, storageKeyPieceStyle} {
		var version string
		if i < len(objects) && objects[i] != nil {
			version = objects[i].Version
		}

		var itemID uint32
		switch key {
		case storageKeyPet:
			itemID = DefaultPetID
		case storageKeyClass:
			itemID = DefaultClassID
		case storageKeyBackground:
			itemID = DefaultBackgroundID
		case storageKeyPieceStyle:
			itemID = DefaultPieceStyleID
		}

		data := EquipmentData{ID: itemID}
		value, err := json.Marshal(data)
		if err != nil {
			return err
		}
		writes = append(writes, &runtime.StorageWrite{
			Collection:      storageCollectionEquipment,
			Key:             key,
			UserID:          userID,
			Value:           string(value),
			PermissionRead:  2,
			PermissionWrite: 0,
			Version:         version,
		})
	}

	_, err := nk.StorageWrite(ctx, writes)
	return err
}

func EquipAbility(ctx context.Context, logger runtime.Logger, nk runtime.NakamaModule, itemType string, payload string) error {
	userID, ok := ctx.Value(runtime.RUNTIME_CTX_USER_ID).(string)
	if !ok {
		return errors.ErrNoUserIdFound
	}

	var req AbilityEquipRequest
	if err := json.Unmarshal([]byte(payload), &req); err != nil {
		return errors.ErrUnmarshal
	}

	if !ValidateItemExists(itemType, req.ItemID) {
		return runtime.NewError("invalid item ID", 3)
	}

	owned, err := IsItemOwned(ctx, nk, userID, req.ItemID, itemType)
	if err != nil || !owned {
		return runtime.NewError("item not owned", 3)
	}

	var abilities []uint32
	switch itemType {
	case storageKeyPet:
		if pet, exists := GetPet(req.ItemID); exists {
			abilities = pet.AbilityIDs
		}
	case storageKeyClass:
		if class, exists := GetClass(req.ItemID); exists {
			abilities = class.AbilityIDs
		}
	}

	if len(abilities) == 0 {
		return runtime.NewError("no abilities available", 3)
	}

	abilityExists := false
	for _, id := range abilities {
		if id == req.AbilityID {
			abilityExists = true
			break
		}
	}
	if !abilityExists {
		return runtime.NewError("invalid ability for item", 3)
	}

	var prog *ItemProgression
	if itemType == storageKeyPet {
		prog, err = GetItemProgression(ctx, nk, userID, ProgressionKeyPet, req.ItemID)
	} else {
		prog, err = GetItemProgression(ctx, nk, userID, ProgressionKeyClass, req.ItemID)
	}
	if err != nil {
		return err
	}

	abilityIndex := -1
	for i, id := range abilities {
		if id == req.AbilityID {
			abilityIndex = i
			break
		}
	}
	if abilityIndex < 0 {
		return runtime.NewError("ability not unlocked", 3)
	}
	if abilityIndex >= prog.AbilitiesUnlocked {
		return runtime.NewError("ability not unlocked", 3)
	}

	prog.EquippedAbility = abilityIndex

	if itemType == storageKeyPet {
		return SaveItemProgression(ctx, nk, logger, userID, ProgressionKeyPet, req.ItemID, prog)
	}
	return SaveItemProgression(ctx, nk, logger, userID, ProgressionKeyClass, req.ItemID, prog)
}

func IsAbilityAvailable(ctx context.Context, nk runtime.NakamaModule, userID string, itemID uint32, abilityID uint32, itemType string) error {
	var abilities []uint32
	switch itemType {
	case storageKeyPet:
		if pet, exists := GetPet(itemID); exists {
			if _, exists := pet.AbilitySet[abilityID]; !exists {
				return runtime.NewError("invalid ability for pet", 3)
			}
			abilities = pet.AbilityIDs
		}
	case storageKeyClass:
		if class, exists := GetClass(itemID); exists {
			if _, exists := class.AbilitySet[abilityID]; !exists {
				return runtime.NewError("invalid ability for class", 3)
			}
			abilities = class.AbilityIDs
		}
	}

	var prog *ItemProgression
	var err error
	if itemType == storageKeyPet {
		prog, err = GetItemProgression(ctx, nk, userID, ProgressionKeyPet, itemID)
	} else {
		prog, err = GetItemProgression(ctx, nk, userID, ProgressionKeyClass, itemID)
	}
	if err != nil {
		return err
	}

	abilityIndex := -1
	for i, id := range abilities {
		if id == abilityID {
			abilityIndex = i
			break
		}
	}
	if abilityIndex >= prog.AbilitiesUnlocked {
		return runtime.NewError("ability not unlocked", 3)
	}

	return nil
}

func EquipItem(ctx context.Context, logger runtime.Logger, nk runtime.NakamaModule, itemStorageKey string, payload string) error {
	userID, ok := ctx.Value(runtime.RUNTIME_CTX_USER_ID).(string)
	if !ok {
		return errors.ErrNoUserIdFound
	}

	var req EquipmentData
	if err := json.Unmarshal([]byte(payload), &req); err != nil {
		return errors.ErrUnmarshal
	}

	if !ValidateItemExists(itemStorageKey, req.ID) {
		return runtime.NewError("invalid item ID", 3)
	}

	owned, err := IsItemOwned(ctx, nk, userID, req.ID, itemStorageKey)
	if err != nil || !owned {
		return runtime.NewError("item not owned", 403)
	}

	value, err := json.Marshal(req)
	if err != nil {
		return errors.ErrMarshal
	}
	objects, err := nk.StorageRead(ctx, []*runtime.StorageRead{
		{Collection: storageCollectionEquipment, Key: itemStorageKey, UserID: userID},
	})
	if err != nil {
		return err
	}
	var version string
	if len(objects) > 0 {
		version = objects[0].Version
	}
	_, err = nk.StorageWrite(ctx, []*runtime.StorageWrite{
		{
			Collection:      storageCollectionEquipment,
			Key:             itemStorageKey,
			UserID:          userID,
			Value:           string(value),
			PermissionRead:  2,
			PermissionWrite: 0,
			Version:         version,
		},
	})
	return err
}
func AddPetExp(ctx context.Context, nk runtime.NakamaModule, logger runtime.Logger, userID string, petID uint32, exp uint32) error {
	// Get level tree name for this pet
	treeName, err := GetLevelTreeName(storageKeyPet, petID)
	if err != nil {
		return runtime.NewError("invalid pet configuration", 13)
	}

	// Get current progression
	prog, err := GetItemProgression(ctx, nk, userID, ProgressionKeyPet, petID)
	if err != nil {
		return err
	}

	// Add XP
	newExp := prog.Exp + int(exp)
	if newExp < prog.Exp {
		newExp = math.MaxInt32
	}
	prog.Exp = newExp

	newLevel, err := CalculateLevel(treeName, prog.Exp)
	if err != nil {
		return err
	}
	tree, exists := GetLevelTree(treeName)
	if !exists {
		return errors.ErrInvalidLevelTree
	}
	if newLevel > tree.MaxLevel {
		newLevel = tree.MaxLevel
		prog.Exp = tree.LevelThresholds[tree.MaxLevel]
	}
	// Check for level up
	if newLevel > prog.Level {
		oldLevel := prog.Level
		prog.Level = newLevel

		// Grant rewards for each level achieved
		for l := oldLevel + 1; l <= newLevel; l++ {
			if err := GrantLevelRewards(ctx, nk, logger, userID, treeName, l, "pet", petID); err != nil {
				return err
			}
		}
	}

	// Save updated progression
	return SaveItemProgression(ctx, nk, logger, userID, ProgressionKeyPet, petID, prog)
}

func AddClassExp(ctx context.Context, nk runtime.NakamaModule, logger runtime.Logger, userID string, classID uint32, exp uint32) error {
	treeName, err := GetLevelTreeName(storageKeyClass, classID)
	if err != nil {
		return runtime.NewError("invalid class configuration", 13)
	}

	prog, err := GetItemProgression(ctx, nk, userID, ProgressionKeyClass, classID)
	if err != nil {
		return err
	}

	newExp := prog.Exp + int(exp)
	if newExp < prog.Exp {
		newExp = math.MaxInt32
	}
	prog.Exp = newExp

	newLevel, err := CalculateLevel(treeName, prog.Exp)
	if err != nil {
		return err
	}

	if newLevel > prog.Level {
		oldLevel := prog.Level
		prog.Level = newLevel

		for l := oldLevel + 1; l <= newLevel; l++ {
			if err := GrantLevelRewards(ctx, nk, logger, userID, treeName, l, "class", classID); err != nil {
				return err
			}
		}
	}

	return SaveItemProgression(ctx, nk, logger, userID, ProgressionKeyClass, classID, prog)
}

func IsItemOwned(ctx context.Context, nk runtime.NakamaModule, userID string, itemID uint32, itemStorageKey string) (bool, error) {
	objects, err := nk.StorageRead(ctx, []*runtime.StorageRead{
		{Collection: storageCollectionInventory, Key: itemStorageKey, UserID: userID},
	})
	if err != nil {
		return false, err
	}
	if len(objects) == 0 {
		return false, nil
	}

	var data InventoryData
	if err := json.Unmarshal([]byte(objects[0].Value), &data); err != nil {
		return false, err
	}

	for _, id := range data.Items {
		if id == itemID {
			return true, nil
		}
	}
	return false, nil
}


[T] go\items\player_rpc.go
Relative Path: go\items\player_rpc.go
Last Modified: 2025-10-27T03:40:39.4580923Z
====

package items

import (
	"block-server/errors"
	"context"
	"database/sql"
	"encoding/json"
	"strconv"
	"strings"

	"github.com/heroiclabs/nakama-common/runtime"
)

// get equipped items
func RpcGetEquipment(ctx context.Context, logger runtime.Logger, db *sql.DB, nk runtime.NakamaModule, payload string) (string, error) {
	userID, ok := ctx.Value(runtime.RUNTIME_CTX_USER_ID).(string)
	if !ok {
		return "", errors.ErrNoUserIdFound
	}

	// Fetch equipped items
	equipped := EquiptmentResponse{}

	equipmentReads := []*runtime.StorageRead{
		{Collection: storageCollectionEquipment, Key: storageKeyPet, UserID: userID},
		{Collection: storageCollectionEquipment, Key: storageKeyClass, UserID: userID},
		{Collection: storageCollectionEquipment, Key: storageKeyBackground, UserID: userID},
		{Collection: storageCollectionEquipment, Key: storageKeyPieceStyle, UserID: userID},
	}

	equipmentObjs, err := nk.StorageRead(ctx, equipmentReads)
	if err == nil {
		for _, obj := range equipmentObjs {
			var data EquipmentData
			if err := json.Unmarshal([]byte(obj.Value), &data); err == nil {
				switch obj.Key {
				case storageKeyPet:
					equipped.Pet = data.ID
				case storageKeyClass:
					equipped.Class = data.ID
				case storageKeyBackground:
					equipped.Background = data.ID
				case storageKeyPieceStyle:
					equipped.PieceStyle = data.ID
				}
			}
		}
	}

	resp, err := json.Marshal(equipped)
	if err != nil {
		return "", errors.ErrMarshal
	}
	return string(resp), nil
}

// get all items in inventory
func RpcGetInventory(ctx context.Context, logger runtime.Logger, db *sql.DB, nk runtime.NakamaModule, payload string) (string, error) {
	userID, ok := ctx.Value(runtime.RUNTIME_CTX_USER_ID).(string)
	if !ok {
		return "", errors.ErrNoUserIdFound
	}
	inventory := InventoryResponse{
		Pets:        make([]uint32, 0),
		Classes:     make([]uint32, 0),
		Backgrounds: make([]uint32, 0),
		PieceStyles: make([]uint32, 0),
	}

	inventoryReads := []*runtime.StorageRead{
		{Collection: storageCollectionInventory, Key: storageKeyPet, UserID: userID},
		{Collection: storageCollectionInventory, Key: storageKeyClass, UserID: userID},
		{Collection: storageCollectionInventory, Key: storageKeyBackground, UserID: userID},
		{Collection: storageCollectionInventory, Key: storageKeyPieceStyle, UserID: userID},
	}

	objs, err := nk.StorageRead(ctx, inventoryReads)
	if err != nil {
		logger.WithFields(map[string]interface{}{
			"user":       userID,
			"collection": storageCollectionInventory,
			"error":      err.Error(),
		}).Error("Inventory storage read failure")
		return "", runtime.NewError("Inventory system unavailable", 13)
	}

	for _, obj := range objs {
		if obj == nil {
			continue
		}

		var data InventoryData
		if err := json.Unmarshal([]byte(obj.Value), &data); err == nil {
			switch obj.Key {
			case storageKeyPet:
				inventory.Pets = data.Items
			case storageKeyClass:
				inventory.Classes = data.Items
			case storageKeyBackground:
				inventory.Backgrounds = data.Items
			case storageKeyPieceStyle:
				inventory.PieceStyles = data.Items
			}
		}
	}
	resp, err := json.Marshal(inventory)
	if err != nil {
		return "", errors.ErrMarshal
	}
	return string(resp), nil
}

// get all progression for all levelable items (pets/classes)
func RpcGetProgression(ctx context.Context, logger runtime.Logger, db *sql.DB, nk runtime.NakamaModule, payload string) (string, error) {
	userID, ok := ctx.Value(runtime.RUNTIME_CTX_USER_ID).(string)
	if !ok {
		return "", errors.ErrNoUserIdFound
	}

	// Batch fetch progression keys
	reads := []*runtime.StorageRead{
		{Collection: storageCollectionProgression, UserID: userID},
	}

	objs, err := nk.StorageRead(ctx, reads)
	if err != nil {
		logger.Error("Progression read error: %v", err)
		return "", runtime.NewError("progression unavailable", 13)
	}

	progression := ProgressionResponse{
		Pets:    make(map[uint32]ItemProgression),
		Classes: make(map[uint32]ItemProgression),
	}

	for _, obj := range objs {
		var p ItemProgression
		if err := json.Unmarshal([]byte(obj.Value), &p); err != nil {
			continue
		}

		// Extract ID from storage key
		if after, ok := strings.CutPrefix(obj.Key, ProgressionKeyPet); ok {
			id, err := strconv.ParseUint(after, 10, 32)
			if err != nil {
				logger.Warn("Invalid pet progression ID: %s", after)
				continue
			}
			// Check if pet exists
			if _, exists := GetPet(uint32(id)); !exists {
				logger.Warn("No pet found for ID: %d", id)
				continue
			}
			progression.Pets[uint32(id)] = p
		} else if after, ok := strings.CutPrefix(obj.Key, ProgressionKeyClass); ok {
			id, err := strconv.ParseUint(after, 10, 32)
			if err != nil {
				logger.Warn("Invalid class progression ID: %s", after)
				continue
			}
			// Check if class exists
			if _, exists := GetClass(uint32(id)); !exists {
				logger.Warn("No class found for ID: %d", id)
				continue
			}
			progression.Classes[uint32(id)] = p
		}
	}

	resp, err := json.Marshal(progression)
	if err != nil {
		return "", errors.ErrMarshal
	}
	return string(resp), nil
}

// equip abilities on items
func RpcEquipPetAbility(ctx context.Context, logger runtime.Logger, nk runtime.NakamaModule, payload string) (string, error) {
	if err := EquipAbility(ctx, logger, nk, storageKeyPet, payload); err != nil {
		logger.Error("Error equipping ability: %v", err)
		return "", runtime.NewError("couldn't equip ability", 3)
	}
	return `{"success": true}`, nil
}

func RpcEquipClassAbility(ctx context.Context, logger runtime.Logger, nk runtime.NakamaModule, payload string) (string, error) {
	if err := EquipAbility(ctx, logger, nk, storageKeyClass, payload); err != nil {
		logger.Error("Error equipping ability: %v", err)
		return "", runtime.NewError("couldn't equip ability", 3)
	}
	return `{"success": true}`, nil
}

// equip items
func RpcEquipPet(ctx context.Context, logger runtime.Logger, nk runtime.NakamaModule, payload string) (string, error) {
	if err := EquipItem(ctx, logger, nk, storageKeyPet, payload); err != nil {
		logger.Error("Error equipping item: %v", err)
		return "", runtime.NewError("couldn't equip item", 3)
	}

	return `{"success": true}`, nil
}

func RpcEquipClass(ctx context.Context, logger runtime.Logger, nk runtime.NakamaModule, payload string) (string, error) {
	if err := EquipItem(ctx, logger, nk, storageKeyClass, payload); err != nil {
		logger.Error("Error equipping class: %v", err)
		return "", runtime.NewError("couldn't equip class", 3)
	}

	return `{"success": true}`, nil
}

func RpcEquipBackground(ctx context.Context, logger runtime.Logger, nk runtime.NakamaModule, payload string) (string, error) {
	if err := EquipItem(ctx, logger, nk, storageKeyBackground, payload); err != nil {
		logger.Error("Error equipping background: %v", err)
		return "", runtime.NewError("couldn't equip background", 3)
	}

	return `{"success": true}`, nil
}

func RpcEquipPieceStyle(ctx context.Context, logger runtime.Logger, nk runtime.NakamaModule, payload string) (string, error) {
	if err := EquipItem(ctx, logger, nk, storageKeyPieceStyle, payload); err != nil {
		logger.Error("Error equipping style: %v", err)
		return "", runtime.NewError("couldn't equip style", 3)
	}

	return `{"success": true}`, nil
}


[T] go\items\rewards.go
Relative Path: go\items\rewards.go
Last Modified: 2025-10-27T03:39:53.6429499Z
====

package items

import (
	"context"
	"encoding/json"
	"fmt"
	"strconv"

	"block-server/errors"

	"github.com/heroiclabs/nakama-common/runtime"
)

func GrantLevelRewards(ctx context.Context, nk runtime.NakamaModule, logger runtime.Logger, userID string, treeName string, level int, itemType string, itemID uint32) error {
	tree, exists := GetLevelTree(treeName)
	if !exists {
		return errors.ErrInvalidLevelTree
	}

	levelStr := strconv.Itoa(level)
	rewardData, exists := tree.Rewards[levelStr]
	if !exists {
		return nil
	}

	rewards := make(map[string]uint32)

	// currency rewards
	if rewardData.Gold != "" {
		val, err := strconv.ParseUint(rewardData.Gold, 10, 32)
		if err != nil {
			return errors.ErrParse
		}
		rewards["gold"] = uint32(val)
	}
	if rewardData.Gems != "" {
		val, err := strconv.ParseUint(rewardData.Gems, 10, 32)
		if err != nil {
			return errors.ErrParse
		}
		rewards["gems"] = uint32(val)
	}

	// progression rewards
	if rewardData.Abilities != "" {
		val, err := strconv.ParseUint(rewardData.Abilities, 10, 32)
		if err != nil {
			return errors.ErrParse
		}
		if val > 0 {
			rewards["abilities"] = uint32(val)
		}
	}
	if rewardData.Sprites != "" {
		val, err := strconv.ParseUint(rewardData.Sprites, 10, 32)
		if err != nil {
			return errors.ErrParse
		}
		if val > 0 {
			rewards["sprites"] = uint32(val)
		}
	}

	// item rewards
	if rewardData.Backgrounds != "" {
		val, err := strconv.ParseUint(rewardData.Backgrounds, 10, 32)
		if err != nil {
			return errors.ErrParse
		}
		if val > 0 {
			rewards["backgrounds"] = uint32(val)
		}
	}
	if rewardData.PieceStyles != "" {
		val, err := strconv.ParseUint(rewardData.PieceStyles, 10, 32)
		if err != nil {
			return errors.ErrParse
		}
		if val > 0 {
			rewards["piece_styles"] = uint32(val)
		}
	}
	logger.Debug("Granting level %d rewards for %s %d: %+v", level, itemType, itemID, rewards)
	if err := GrantRewardItems(ctx, nk, logger, userID, rewards, itemType, itemID); err != nil {
		logger.WithField("rewards", rewards).Error("Reward grant failed")
		return err
	}
	logger.Debug("Rewards granted successfully")
	return nil
}

func GrantRewardItems(ctx context.Context, nk runtime.NakamaModule, logger runtime.Logger, userID string, rewards map[string]uint32, itemType string, itemID uint32) error {
	writes := make([]*runtime.StorageWrite, 0)
	walletUpdates := make(map[string]int64)

	for rewardType, amount := range rewards {
		switch rewardType {
		case "gold", "gems":
			walletUpdates[rewardType] = int64(amount)

		case "abilities", "sprites":
			var maxAbilitiesAvailable int
			var maxSpritesAvailable int
			switch itemType {
			case "pet":
				if pet, exists := GetPet(itemID); exists {
					maxAbilitiesAvailable = len(pet.AbilityIDs)
					maxSpritesAvailable = pet.SpriteCount
				}
			case "class":
				if class, exists := GetClass(itemID); exists {
					maxAbilitiesAvailable = len(class.AbilityIDs)
					maxSpritesAvailable = class.SpriteCount
				}
			}

			var prog *ItemProgression
			var err error
			if itemType == "pet" {
				prog, err = GetItemProgression(ctx, nk, userID, ProgressionKeyPet, itemID)
			} else {
				prog, err = GetItemProgression(ctx, nk, userID, ProgressionKeyClass, itemID)
			}
			if err != nil {
				return err
			}

			currentUnlocked := prog.AbilitiesUnlocked
			maxAvailable := maxAbilitiesAvailable
			if rewardType == "sprites" {
				currentUnlocked = prog.SpritesUnlocked
				maxAvailable = maxSpritesAvailable
			}

			if maxAvailable <= 0 {
				continue
			}

			// Calculate new unlocks count
			newUnlocked := currentUnlocked + int(amount)
			if newUnlocked > maxAvailable {
				amount = uint32(maxAvailable - currentUnlocked)
			}
			if amount == 0 {
				continue
			}

			// Update progression
			switch rewardType {
			case "abilities":
				prog.AbilitiesUnlocked += int(amount)

			case "sprites":
				prog.SpritesUnlocked += int(amount)

			}

			if itemType == "pet" {
				err = SaveItemProgression(ctx, nk, logger, userID, ProgressionKeyPet, itemID, prog)
			} else {
				err = SaveItemProgression(ctx, nk, logger, userID, ProgressionKeyClass, itemID, prog)
			}
			if err != nil {
				return err
			}

		case "backgrounds", "piece_styles":
			storageKey := storageKeyBackground
			if rewardType == "piece_styles" {
				storageKey = storageKeyPieceStyle
			}

			objects, _ := nk.StorageRead(ctx, []*runtime.StorageRead{
				{Collection: storageCollectionInventory, Key: storageKey, UserID: userID},
			})

			var ownedItems InventoryData

			var version string

			if len(objects) > 0 {
				if err := json.Unmarshal([]byte(objects[0].Value), &ownedItems); err != nil {
					return fmt.Errorf("inventory read failed: %w", err)
				}
				version = objects[0].Version
			}

			// Get actual reward items
			rewardIDs := GetRewardItemIDs(itemType, itemID, rewardType, amount)
			newItems := make([]uint32, 0)

			for _, id := range rewardIDs {
				exists := false
				for _, owned := range ownedItems.Items {
					if owned == id {
						exists = true
						break
					}
				}
				if !exists {
					newItems = append(newItems, id)
				}
			}

			if len(newItems) > 0 {
				// Add new items to inventory
				updatedItems := append(ownedItems.Items, newItems...)
				data := InventoryData{Items: updatedItems}
				value, err := json.Marshal(data)
				if err != nil {
					return err
				}

				writes = append(writes, &runtime.StorageWrite{
					Collection:      storageCollectionInventory,
					Key:             storageKey,
					UserID:          userID,
					Value:           string(value),
					PermissionRead:  2,
					PermissionWrite: 0,
					Version:         version,
				})
			}
		}
	}

	if len(walletUpdates) > 0 {
		if _, _, err := nk.WalletUpdate(ctx, userID, walletUpdates, map[string]interface{}{}, true); err != nil {
			return err
		}
	}

	if len(writes) > 0 {
		if _, err := nk.StorageWrite(ctx, writes); err != nil {
			return err
		}
	}

	return nil
}

func GetRewardItemIDs(itemType string, itemID uint32, rewardType string, amount uint32) []uint32 {
	var ids []uint32

	switch itemType {
	case "pet":
		if pet, exists := GetPet(uint32(itemID)); exists {
			switch rewardType {
			case "backgrounds":
				ids = pet.BackgroundIDs
			case "piece_styles":
				ids = pet.StyleIDs
			}
		}
	case "class":
		if class, exists := GetClass(uint32(itemID)); exists {
			switch rewardType {
			case "backgrounds":
				ids = class.BackgroundIDs
			case "piece_styles":
				ids = class.StyleIDs
			}
		}
	}
	if ids == nil {
		return []uint32{}
	}
	if len(ids) > int(amount) {
		return ids[:amount]
	}

	return ids
}


[T] go\items\types.go
Relative Path: go\items\types.go
Last Modified: 2025-10-27T03:48:21.5561155Z
====

package items

type GameDataStuct struct {
	Pets        map[uint32]*Pet       `json:"pets"`
	Classes     map[uint32]*Class     `json:"classes"`
	Backgrounds map[uint32]Background `json:"backgrounds"`
	PieceStyles map[uint32]PieceStyle `json:"piece_styles"`
	LevelTrees  map[string]LevelTree  `json:"level_trees"`
}

type Pet struct {
	Name          string   `json:"name"`
	SpriteCount   int      `json:"spriteCount"`
	AbilityIDs    []uint32 `json:"abilityIds"`
	AbilitySet    map[uint32]struct{}
	BackgroundIDs []uint32 `json:"backgroundIds"`
	StyleIDs      []uint32 `json:"styleIds"`
	LevelTreeName string   `json:"levelTreeName"`
}

type Class struct {
	Name          string   `json:"name"`
	SpriteCount   int      `json:"spriteCount"`
	AbilityIDs    []uint32 `json:"abilityIds"`
	AbilitySet    map[uint32]struct{}
	BackgroundIDs []uint32 `json:"backgroundIds"`
	StyleIDs      []uint32 `json:"styleIds"`
	LevelTreeName string   `json:"levelTreeName"`
}

type Background struct {
	Name string `json:"name"`
}

type PieceStyle struct {
	Name string `json:"name"`
}

type LevelTree struct {
	MaxLevel        int   `json:"max_level"`
	BaseXP          int   `json:"base_xp"`
	LevelThresholds []int `json:"level_thresholds"`
	RewardedLevels  []int `json:"rewarded_levels"`
	Rewards         map[string]struct {
		Gold        string `json:"gold,omitempty"`
		Gems        string `json:"gems,omitempty"`
		Abilities   string `json:"abilities,omitempty"`
		Backgrounds string `json:"backgrounds,omitempty"`
		PieceStyles string `json:"piece_styles,omitempty"`
		Sprites     string `json:"sprites,omitempty"`
	} `json:"rewards"`
}

const (
	storageCollectionInventory = "inventory"
	storageKeyPet              = "pets"         // [0,1,2]
	storageKeyClass            = "classes"      // [0,1,2]
	storageKeyBackground       = "backgrounds"  // [0,1,2,3]
	storageKeyPieceStyle       = "piece_styles" //[0]

	storageCollectionEquipment = "equipment"
	// storageKeyPet              = "pet"         // 0
	// storageKeyClass            = "class"       // 2
	// storageKeyBackground       = "background"  // 2
	// storageKeyPieceStyle       = "piece_style" // 0
	storageCollectionProgression = "progression"
)

const (
	ProgressionKeyPet   = "pet_"
	ProgressionKeyClass = "class_"
)

type ItemProgression struct {
	Level int `json:"level"`
	Exp   int `json:"xp"`

	EquippedAbility int `json:"ea"`
	EquippedSprite  int `json:"es"`

	AbilitiesUnlocked   int `json:"au"`
	SpritesUnlocked     int `json:"su"`
	BackgroundsUnlocked int `json:"bu"`
	PieceStylesUnlocked int `json:"pu"`

	Version string `json:"-"`
}

type AbilityEquipRequest struct {
	ItemID    uint32 `json:"id"`
	AbilityID uint32 `json:"ability_id"`
}

type LevelReward struct {
	Gold        uint32   `json:"gold,omitempty"`
	Gems        uint32   `json:"gems,omitempty"`
	Abilities   []uint32 `json:"abilities,omitempty"`
	Backgrounds []uint32 `json:"backgrounds,omitempty"`
	PieceStyles []uint32 `json:"piece_styles,omitempty"`
	Sprites     []uint32 `json:"sprites,omitempty"`
}

type EquiptmentResponse struct {
	Pet        uint32 `json:"pet"`
	Class      uint32 `json:"class"`
	Background uint32 `json:"background"`
	PieceStyle uint32 `json:"piece_style"`
}

type InventoryResponse struct {
	Pets        []uint32 `json:"pets"`
	Classes     []uint32 `json:"classes"`
	Backgrounds []uint32 `json:"backgrounds"`
	PieceStyles []uint32 `json:"piece_styles"`
}

type ProgressionResponse struct {
	Pets    map[uint32]ItemProgression `json:"pets"`
	Classes map[uint32]ItemProgression `json:"classes"`
}

type InventoryData struct {
	Items []uint32 `json:"items"`
}

type EquipmentData struct {
	ID uint32 `json:"id"`
}


[T] go\items\unlock_item.go
Relative Path: go\items\unlock_item.go
Last Modified: 2025-10-27T03:34:38.6029640Z
====

package items

import (
	"context"
	"encoding/json"
	"errors"
	"fmt"

	"github.com/heroiclabs/nakama-common/runtime"
)

var (
	ErrInvalidItem = errors.New("invalid item ID")
)

// Gives pet to user with initialized progression
func GivePet(ctx context.Context, nk runtime.NakamaModule, logger runtime.Logger, userID string, petID uint32) error {
	if !ValidateItemExists(storageKeyPet, petID) {
		return ErrInvalidItem
	}

	if err := addToInventory(ctx, nk, logger, userID, storageKeyPet, petID); err != nil {
		return err
	}

	// Initialize progression if none
	prog, err := GetItemProgression(ctx, nk, userID, ProgressionKeyPet, petID)
	if err != nil || prog == nil {
		return InitializeProgression(ctx, nk, logger, userID, ProgressionKeyPet, petID)
	}
	return nil
}

// Gives class to user with initialized progression
func GiveClass(ctx context.Context, nk runtime.NakamaModule, logger runtime.Logger, userID string, classID uint32) error {
	if !ValidateItemExists(storageKeyClass, classID) {
		return ErrInvalidItem
	}

	if err := addToInventory(ctx, nk, logger, userID, storageKeyClass, classID); err != nil {
		return err
	}

	prog, err := GetItemProgression(ctx, nk, userID, ProgressionKeyClass, classID)
	if err != nil || prog == nil {
		return InitializeProgression(ctx, nk, logger, userID, ProgressionKeyClass, classID)
	}
	return nil
}

func GiveBackground(ctx context.Context, nk runtime.NakamaModule, logger runtime.Logger, userID string, backgroundID uint32) error {
	if !ValidateItemExists(storageKeyBackground, backgroundID) {
		return ErrInvalidItem
	}

	return addToInventory(ctx, nk, logger, userID, storageKeyBackground, backgroundID)
}

func GivePieceStyle(ctx context.Context, nk runtime.NakamaModule, logger runtime.Logger, userID string, styleID uint32) error {
	if !ValidateItemExists(storageKeyPieceStyle, styleID) {
		return ErrInvalidItem
	}
	return addToInventory(ctx, nk, logger, userID, storageKeyPieceStyle, styleID)
}

func addToInventory(ctx context.Context, nk runtime.NakamaModule, logger runtime.Logger, userID string, itemType string, itemID uint32) error {
	// fetch current inventory
	objs, err := nk.StorageRead(ctx, []*runtime.StorageRead{
		{Collection: storageCollectionInventory, Key: itemType, UserID: userID},
	})
	if err != nil {
		return err
	}

	var current InventoryData
	var version string
	if len(objs) > 0 {
		// Unmarshal existing items
		if err := json.Unmarshal([]byte(objs[0].Value), &current); err != nil {
			return err
		}
		version = objs[0].Version // set version if object exists
	}

	// Check if already owned
	for _, id := range current.Items {
		if id == itemID {
			return nil // already owned
		}
	}

	// write item to inventory
	newItems := append(current.Items, itemID)
	data := InventoryData{Items: newItems}
	value, err := json.Marshal(data)
	if err != nil {
		logger.WithField("items", newItems).Error("Inventory marshal failed")
		return fmt.Errorf("inventory marshal error: %w", err)
	}

	_, err = nk.StorageWrite(ctx, []*runtime.StorageWrite{
		{
			Collection:      storageCollectionInventory,
			Key:             itemType,
			UserID:          userID,
			Value:           string(value),
			PermissionRead:  2, // Inventory is public
			PermissionWrite: 0,
			Version:         version,
		},
	})
	return err
}

func InitializeProgression(ctx context.Context, nk runtime.NakamaModule, logger runtime.Logger, userID string, progressionKey string, itemID uint32) error {
	prog := &ItemProgression{
		Level:               1,
		Exp:                 0,
		EquippedAbility:     0,
		EquippedSprite:      0,
		AbilitiesUnlocked:   1, // First ability unlocked
		SpritesUnlocked:     1, // First sprite unlocked
		BackgroundsUnlocked: 0,
		PieceStylesUnlocked: 0,
	}
	return SaveItemProgression(ctx, nk, logger, userID, progressionKey, itemID, prog)
}


[T] go\items\gamedata\items.json
Relative Path: go\items\gamedata\items.json
Last Modified: 2025-10-27T01:46:42.0001063Z
====

{
  "pets": {
    "0": {
      "name": "Cosmic Cat",
      "spriteCount": 1,
      "abilityIds": [
        0,
        1
      ],
      "backgroundIds": null,
      "styleIds": null,
      "levelTreeName": "pet_basic"
    },
    "1": {
      "name": "White Dragon",
      "spriteCount": 1,
      "abilityIds": [
        2,
        3
      ],
      "backgroundIds": null,
      "styleIds": null,
      "levelTreeName": "pet_basic"
    },
    "2": {
      "name": "Froggie",
      "spriteCount": 1,
      "abilityIds": [
        2,
        3
      ],
      "backgroundIds": null,
      "styleIds": null,
      "levelTreeName": "pet_basic"
    }
  },
  "classes": {
    "1": {
      "name": "Cleric",
      "spriteCount": 1,
      "abilityIds": [
        1,
        3
      ],
      "backgroundIds": [
        1
      ],
      "styleIds": [
        3
      ],
      "levelTreeName": "class_basic"
    },
    "0": {
      "name": "Knight",
      "spriteCount": 1,
      "abilityIds": [
        1,
        2
      ],
      "backgroundIds": [
        3
      ],
      "styleIds": [
        4
      ],
      "levelTreeName": "class_basic"
    },
    "2": {
      "name": "Mage",
      "spriteCount": 1,
      "abilityIds": [
        4,
        5
      ],
      "backgroundIds": [
        5
      ],
      "styleIds": [
        6
      ],
      "levelTreeName": "class_basic"
    }
  },
  "backgrounds": {
    "5": {
      "name": "Blue Spheres"
    },
    "4": {
      "name": "Celestial Orange"
    },
    "3": {
      "name": "Golden Voyage"
    },
    "0": {
      "name": "Waterside"
    },
    "2": {
      "name": "Blue Earth"
    },
    "1": {
      "name": "Sunset"
    }
  },
  "piece_styles": {
    "7": {
      "name": "Blackout"
    },
    "0": {
      "name": "Tealeous"
    },
    "1": {
      "name": "Teal to Gray"
    },
    "2": {
      "name": "Drab Paints"
    },
    "3": {
      "name": "Pastel"
    },
    "4": {
      "name": "Purplink"
    },
    "5": {
      "name": "Vibrant Seas"
    },
    "6": {
      "name": "Teal Seas"
    },
    "8": {
      "name": "Whiteout"
    }
  },
  "level_trees": {
    "pet_basic": {
      "max_level": 25,
      "base_xp": 3200,
      "rewarded_levels": [
        1,
        5,
        12,
        18,
        25
      ],
      "rewards": {
        "1": {
          "gold": "250"
        },
        "2": {
          "backgrounds": "1",
          "gold": "150"
        },
        "3": {
          "abilities": "1"
        },
        "4": {
          "gems": "25"
        },
        "5": {
          "piece_styles": "1",
          "gold": "150"
        },
        "6": {
          "sprites": "1",
          "gold": "150"
        }
      }
    },
    "class_basic": {
      "max_level": 10,
      "base_xp": 10000,
      "rewarded_levels": [
        1,
        3,
        5,
        8,
        10
      ],
      "rewards": {
        "1": {
          "gems": "10"
        },
        "2": {
          "backgrounds": "1"
        },
        "3": {
          "gems": "15"
        },
        "4": {
          "abilities": "1"
        },
        "5": {
          "piece_styles": "1"
        },
        "6": {
          "sprites": "1"
        }
      }
    }
  }
}

[T] go\session\session_events.go
Relative Path: go\session\session_events.go
Last Modified: 2025-10-26T21:30:58.7674230Z
====

package session

import (
	"context"
	"database/sql"
	"time"

	"block-server/items"

	"github.com/heroiclabs/nakama-common/api"
	"github.com/heroiclabs/nakama-common/runtime"
)

const (
	notificationCodeSingleDevice = 101

	streamModeNotification = 0
)

func RegisterSessionEvents(db *sql.DB, nk runtime.NakamaModule, initializer runtime.Initializer) error {
	if err := initializer.RegisterEventSessionStart(eventSessionStartFunc(nk)); err != nil {
		return err
	}
	if err := initializer.RegisterEventSessionEnd(eventSessionEndFunc(db)); err != nil {
		return err
	}

	return nil
}

// Update a user's last online timestamp when they disconnect.
func eventSessionEndFunc(db *sql.DB) func(context.Context, runtime.Logger, *api.Event) {
	return func(ctx context.Context, logger runtime.Logger, evt *api.Event) {
		userID, ok := ctx.Value(runtime.RUNTIME_CTX_USER_ID).(string)
		if !ok {
			logger.Error("context did not contain user ID.")
			return
		}

		// Restrict the time allowed with the DB operation so we can fail fast in a stampeding herd scenario.
		ctx2, _ := context.WithTimeout(ctx, 1*time.Second)
		query := `
UPDATE
    users AS u
SET
    metadata
        = u.metadata
        || jsonb_build_object('last_online_time_unix', extract('epoch' FROM now())::BIGINT)
WHERE
    id = $1;
`
		_, err := db.ExecContext(ctx2, query, userID)
		if err != nil && err != context.DeadlineExceeded {
			logger.WithField("err", err).Error("db.ExecContext last online update error.")
			return
		}
	}
}

// Limit the number of concurrent realtime sessions active for a user to just one.
func eventSessionStartFunc(nk runtime.NakamaModule) func(context.Context, runtime.Logger, *api.Event) {
	return func(ctx context.Context, logger runtime.Logger, evt *api.Event) {
		items.TryClaimDailyDrops(ctx, logger, nk)

		userID, ok := ctx.Value(runtime.RUNTIME_CTX_USER_ID).(string)
		if !ok {
			logger.Error("context did not contain user ID.")
			return
		}

		sessionID, ok := ctx.Value(runtime.RUNTIME_CTX_SESSION_ID).(string)
		if !ok {
			logger.Error("context did not contain session ID.")
			return
		}

		// Fetch all live presences for this user on their private notification stream.
		presences, err := nk.StreamUserList(streamModeNotification, userID, "", "", true, true)
		if err != nil {
			logger.WithField("err", err).Error("nk.StreamUserList error.")
			return
		}

		notifications := []*runtime.NotificationSend{
			{
				Code: notificationCodeSingleDevice,
				Content: map[string]interface{}{
					"kicked_by": sessionID,
				},
				Persistent: false,
				Sender:     userID,
				Subject:    "Another device is active!",
				UserID:     userID,
			},
		}
		for _, presence := range presences {
			if presence.GetUserId() == userID && presence.GetSessionId() == sessionID {
				// Ignore our current socket connection.
				continue
			}

			ctx2, _ := context.WithTimeout(context.Background(), 3*time.Second)
			if err := nk.NotificationsSend(ctx2, notifications); err != nil {
				logger.WithField("err", err).Error("nk.NotificationsSend error.")
				continue
			}

			// Force disconnect the socket for the user's other game client.
			if err := nk.SessionDisconnect(ctx2, presence.GetSessionId()); err != nil {
				logger.WithField("err", err).Error("nk.SessionDisconnect error.")
				continue
			}
		}
	}
}


[T] ts\babel.config.json
Relative Path: ts\babel.config.json
Last Modified: 2025-10-21T19:07:45.7423901Z
====

{
  "presets": [
    "@babel/env"
  ],
  "plugins": []
}


[T] ts\package-lock.json
Relative Path: ts\package-lock.json
Last Modified: 2025-10-21T19:07:45.7440382Z
====

{
  "name": "ts",
  "version": "1.0.0",
  "lockfileVersion": 3,
  "requires": true,
  "packages": {
    "": {
      "name": "ts",
      "version": "1.0.0",
      "license": "ISC",
      "dependencies": {
        "nakama-runtime": "github:heroiclabs/nakama-common"
      },
      "devDependencies": {
        "@babel/core": "^7.28.4",
        "@babel/plugin-external-helpers": "^7.27.1",
        "@babel/preset-env": "^7.28.3",
        "@rollup/plugin-babel": "^6.1.0",
        "@rollup/plugin-commonjs": "^28.0.8",
        "@rollup/plugin-json": "^6.1.0",
        "@rollup/plugin-node-resolve": "^16.0.3",
        "@rollup/plugin-typescript": "^12.1.4",
        "rollup": "^4.52.5",
        "tslib": "^2.8.1",
        "typescript": "^5.9.3"
      },
      "engines": {
        "node": ">=18.19.0"
      }
    },
    "node_modules/@babel/code-frame": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.27.1.tgz",
      "integrity": "sha512-cjQ7ZlQ0Mv3b47hABuTevyTuYN4i+loJKGeV9flcCgIK37cCXRh+L1bd3iBHlynerhQ7BhCkn2BPbQUL+rGqFg==",
      "dev": true,
      "dependencies": {
        "@babel/helper-validator-identifier": "^7.27.1",
        "js-tokens": "^4.0.0",
        "picocolors": "^1.1.1"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/compat-data": {
      "version": "7.28.4",
      "resolved": "https://registry.npmjs.org/@babel/compat-data/-/compat-data-7.28.4.tgz",
      "integrity": "sha512-YsmSKC29MJwf0gF8Rjjrg5LQCmyh+j/nD8/eP7f+BeoQTKYqs9RoWbjGOdy0+1Ekr68RJZMUOPVQaQisnIo4Rw==",
      "dev": true,
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/core": {
      "version": "7.28.4",
      "resolved": "https://registry.npmjs.org/@babel/core/-/core-7.28.4.tgz",
      "integrity": "sha512-2BCOP7TN8M+gVDj7/ht3hsaO/B/n5oDbiAyyvnRlNOs+u1o+JWNYTQrmpuNp1/Wq2gcFrI01JAW+paEKDMx/CA==",
      "dev": true,
      "peer": true,
      "dependencies": {
        "@babel/code-frame": "^7.27.1",
        "@babel/generator": "^7.28.3",
        "@babel/helper-compilation-targets": "^7.27.2",
        "@babel/helper-module-transforms": "^7.28.3",
        "@babel/helpers": "^7.28.4",
        "@babel/parser": "^7.28.4",
        "@babel/template": "^7.27.2",
        "@babel/traverse": "^7.28.4",
        "@babel/types": "^7.28.4",
        "@jridgewell/remapping": "^2.3.5",
        "convert-source-map": "^2.0.0",
        "debug": "^4.1.0",
        "gensync": "^1.0.0-beta.2",
        "json5": "^2.2.3",
        "semver": "^6.3.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/babel"
      }
    },
    "node_modules/@babel/generator": {
      "version": "7.28.3",
      "resolved": "https://registry.npmjs.org/@babel/generator/-/generator-7.28.3.tgz",
      "integrity": "sha512-3lSpxGgvnmZznmBkCRnVREPUFJv2wrv9iAoFDvADJc0ypmdOxdUtcLeBgBJ6zE0PMeTKnxeQzyk0xTBq4Ep7zw==",
      "dev": true,
      "dependencies": {
        "@babel/parser": "^7.28.3",
        "@babel/types": "^7.28.2",
        "@jridgewell/gen-mapping": "^0.3.12",
        "@jridgewell/trace-mapping": "^0.3.28",
        "jsesc": "^3.0.2"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-annotate-as-pure": {
      "version": "7.27.3",
      "resolved": "https://registry.npmjs.org/@babel/helper-annotate-as-pure/-/helper-annotate-as-pure-7.27.3.tgz",
      "integrity": "sha512-fXSwMQqitTGeHLBC08Eq5yXz2m37E4pJX1qAU1+2cNedz/ifv/bVXft90VeSav5nFO61EcNgwr0aJxbyPaWBPg==",
      "dev": true,
      "dependencies": {
        "@babel/types": "^7.27.3"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-compilation-targets": {
      "version": "7.27.2",
      "resolved": "https://registry.npmjs.org/@babel/helper-compilation-targets/-/helper-compilation-targets-7.27.2.tgz",
      "integrity": "sha512-2+1thGUUWWjLTYTHZWK1n8Yga0ijBz1XAhUXcKy81rd5g6yh7hGqMp45v7cadSbEHc9G3OTv45SyneRN3ps4DQ==",
      "dev": true,
      "dependencies": {
        "@babel/compat-data": "^7.27.2",
        "@babel/helper-validator-option": "^7.27.1",
        "browserslist": "^4.24.0",
        "lru-cache": "^5.1.1",
        "semver": "^6.3.1"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-create-class-features-plugin": {
      "version": "7.28.3",
      "resolved": "https://registry.npmjs.org/@babel/helper-create-class-features-plugin/-/helper-create-class-features-plugin-7.28.3.tgz",
      "integrity": "sha512-V9f6ZFIYSLNEbuGA/92uOvYsGCJNsuA8ESZ4ldc09bWk/j8H8TKiPw8Mk1eG6olpnO0ALHJmYfZvF4MEE4gajg==",
      "dev": true,
      "dependencies": {
        "@babel/helper-annotate-as-pure": "^7.27.3",
        "@babel/helper-member-expression-to-functions": "^7.27.1",
        "@babel/helper-optimise-call-expression": "^7.27.1",
        "@babel/helper-replace-supers": "^7.27.1",
        "@babel/helper-skip-transparent-expression-wrappers": "^7.27.1",
        "@babel/traverse": "^7.28.3",
        "semver": "^6.3.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0"
      }
    },
    "node_modules/@babel/helper-create-regexp-features-plugin": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/helper-create-regexp-features-plugin/-/helper-create-regexp-features-plugin-7.27.1.tgz",
      "integrity": "sha512-uVDC72XVf8UbrH5qQTc18Agb8emwjTiZrQE11Nv3CuBEZmVvTwwE9CBUEvHku06gQCAyYf8Nv6ja1IN+6LMbxQ==",
      "dev": true,
      "dependencies": {
        "@babel/helper-annotate-as-pure": "^7.27.1",
        "regexpu-core": "^6.2.0",
        "semver": "^6.3.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0"
      }
    },
    "node_modules/@babel/helper-define-polyfill-provider": {
      "version": "0.6.5",
      "resolved": "https://registry.npmjs.org/@babel/helper-define-polyfill-provider/-/helper-define-polyfill-provider-0.6.5.tgz",
      "integrity": "sha512-uJnGFcPsWQK8fvjgGP5LZUZZsYGIoPeRjSF5PGwrelYgq7Q15/Ft9NGFp1zglwgIv//W0uG4BevRuSJRyylZPg==",
      "dev": true,
      "dependencies": {
        "@babel/helper-compilation-targets": "^7.27.2",
        "@babel/helper-plugin-utils": "^7.27.1",
        "debug": "^4.4.1",
        "lodash.debounce": "^4.0.8",
        "resolve": "^1.22.10"
      },
      "peerDependencies": {
        "@babel/core": "^7.4.0 || ^8.0.0-0 <8.0.0"
      }
    },
    "node_modules/@babel/helper-globals": {
      "version": "7.28.0",
      "resolved": "https://registry.npmjs.org/@babel/helper-globals/-/helper-globals-7.28.0.tgz",
      "integrity": "sha512-+W6cISkXFa1jXsDEdYA8HeevQT/FULhxzR99pxphltZcVaugps53THCeiWA8SguxxpSp3gKPiuYfSWopkLQ4hw==",
      "dev": true,
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-member-expression-to-functions": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/helper-member-expression-to-functions/-/helper-member-expression-to-functions-7.27.1.tgz",
      "integrity": "sha512-E5chM8eWjTp/aNoVpcbfM7mLxu9XGLWYise2eBKGQomAk/Mb4XoxyqXTZbuTohbsl8EKqdlMhnDI2CCLfcs9wA==",
      "dev": true,
      "dependencies": {
        "@babel/traverse": "^7.27.1",
        "@babel/types": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-module-imports": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/helper-module-imports/-/helper-module-imports-7.27.1.tgz",
      "integrity": "sha512-0gSFWUPNXNopqtIPQvlD5WgXYI5GY2kP2cCvoT8kczjbfcfuIljTbcWrulD1CIPIX2gt1wghbDy08yE1p+/r3w==",
      "dev": true,
      "dependencies": {
        "@babel/traverse": "^7.27.1",
        "@babel/types": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-module-transforms": {
      "version": "7.28.3",
      "resolved": "https://registry.npmjs.org/@babel/helper-module-transforms/-/helper-module-transforms-7.28.3.tgz",
      "integrity": "sha512-gytXUbs8k2sXS9PnQptz5o0QnpLL51SwASIORY6XaBKF88nsOT0Zw9szLqlSGQDP/4TljBAD5y98p2U1fqkdsw==",
      "dev": true,
      "dependencies": {
        "@babel/helper-module-imports": "^7.27.1",
        "@babel/helper-validator-identifier": "^7.27.1",
        "@babel/traverse": "^7.28.3"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0"
      }
    },
    "node_modules/@babel/helper-optimise-call-expression": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/helper-optimise-call-expression/-/helper-optimise-call-expression-7.27.1.tgz",
      "integrity": "sha512-URMGH08NzYFhubNSGJrpUEphGKQwMQYBySzat5cAByY1/YgIRkULnIy3tAMeszlL/so2HbeilYloUmSpd7GdVw==",
      "dev": true,
      "dependencies": {
        "@babel/types": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-plugin-utils": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/helper-plugin-utils/-/helper-plugin-utils-7.27.1.tgz",
      "integrity": "sha512-1gn1Up5YXka3YYAHGKpbideQ5Yjf1tDa9qYcgysz+cNCXukyLl6DjPXhD3VRwSb8c0J9tA4b2+rHEZtc6R0tlw==",
      "dev": true,
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-remap-async-to-generator": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/helper-remap-async-to-generator/-/helper-remap-async-to-generator-7.27.1.tgz",
      "integrity": "sha512-7fiA521aVw8lSPeI4ZOD3vRFkoqkJcS+z4hFo82bFSH/2tNd6eJ5qCVMS5OzDmZh/kaHQeBaeyxK6wljcPtveA==",
      "dev": true,
      "dependencies": {
        "@babel/helper-annotate-as-pure": "^7.27.1",
        "@babel/helper-wrap-function": "^7.27.1",
        "@babel/traverse": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0"
      }
    },
    "node_modules/@babel/helper-replace-supers": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/helper-replace-supers/-/helper-replace-supers-7.27.1.tgz",
      "integrity": "sha512-7EHz6qDZc8RYS5ElPoShMheWvEgERonFCs7IAonWLLUTXW59DP14bCZt89/GKyreYn8g3S83m21FelHKbeDCKA==",
      "dev": true,
      "dependencies": {
        "@babel/helper-member-expression-to-functions": "^7.27.1",
        "@babel/helper-optimise-call-expression": "^7.27.1",
        "@babel/traverse": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0"
      }
    },
    "node_modules/@babel/helper-skip-transparent-expression-wrappers": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/helper-skip-transparent-expression-wrappers/-/helper-skip-transparent-expression-wrappers-7.27.1.tgz",
      "integrity": "sha512-Tub4ZKEXqbPjXgWLl2+3JpQAYBJ8+ikpQ2Ocj/q/r0LwE3UhENh7EUabyHjz2kCEsrRY83ew2DQdHluuiDQFzg==",
      "dev": true,
      "dependencies": {
        "@babel/traverse": "^7.27.1",
        "@babel/types": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-string-parser": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/helper-string-parser/-/helper-string-parser-7.27.1.tgz",
      "integrity": "sha512-qMlSxKbpRlAridDExk92nSobyDdpPijUq2DW6oDnUqd0iOGxmQjyqhMIihI9+zv4LPyZdRje2cavWPbCbWm3eA==",
      "dev": true,
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-validator-identifier": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/helper-validator-identifier/-/helper-validator-identifier-7.27.1.tgz",
      "integrity": "sha512-D2hP9eA+Sqx1kBZgzxZh0y1trbuU+JoDkiEwqhQ36nodYqJwyEIhPSdMNd7lOm/4io72luTPWH20Yda0xOuUow==",
      "dev": true,
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-validator-option": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/helper-validator-option/-/helper-validator-option-7.27.1.tgz",
      "integrity": "sha512-YvjJow9FxbhFFKDSuFnVCe2WxXk1zWc22fFePVNEaWJEu8IrZVlda6N0uHwzZrUM1il7NC9Mlp4MaJYbYd9JSg==",
      "dev": true,
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-wrap-function": {
      "version": "7.28.3",
      "resolved": "https://registry.npmjs.org/@babel/helper-wrap-function/-/helper-wrap-function-7.28.3.tgz",
      "integrity": "sha512-zdf983tNfLZFletc0RRXYrHrucBEg95NIFMkn6K9dbeMYnsgHaSBGcQqdsCSStG2PYwRre0Qc2NNSCXbG+xc6g==",
      "dev": true,
      "dependencies": {
        "@babel/template": "^7.27.2",
        "@babel/traverse": "^7.28.3",
        "@babel/types": "^7.28.2"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helpers": {
      "version": "7.28.4",
      "resolved": "https://registry.npmjs.org/@babel/helpers/-/helpers-7.28.4.tgz",
      "integrity": "sha512-HFN59MmQXGHVyYadKLVumYsA9dBFun/ldYxipEjzA4196jpLZd8UjEEBLkbEkvfYreDqJhZxYAWFPtrfhNpj4w==",
      "dev": true,
      "dependencies": {
        "@babel/template": "^7.27.2",
        "@babel/types": "^7.28.4"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/parser": {
      "version": "7.28.4",
      "resolved": "https://registry.npmjs.org/@babel/parser/-/parser-7.28.4.tgz",
      "integrity": "sha512-yZbBqeM6TkpP9du/I2pUZnJsRMGGvOuIrhjzC1AwHwW+6he4mni6Bp/m8ijn0iOuZuPI2BfkCoSRunpyjnrQKg==",
      "dev": true,
      "dependencies": {
        "@babel/types": "^7.28.4"
      },
      "bin": {
        "parser": "bin/babel-parser.js"
      },
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@babel/plugin-bugfix-firefox-class-in-computed-class-key": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-bugfix-firefox-class-in-computed-class-key/-/plugin-bugfix-firefox-class-in-computed-class-key-7.27.1.tgz",
      "integrity": "sha512-QPG3C9cCVRQLxAVwmefEmwdTanECuUBMQZ/ym5kiw3XKCGA7qkuQLcjWWHcrD/GKbn/WmJwaezfuuAOcyKlRPA==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1",
        "@babel/traverse": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0"
      }
    },
    "node_modules/@babel/plugin-bugfix-safari-class-field-initializer-scope": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-bugfix-safari-class-field-initializer-scope/-/plugin-bugfix-safari-class-field-initializer-scope-7.27.1.tgz",
      "integrity": "sha512-qNeq3bCKnGgLkEXUuFry6dPlGfCdQNZbn7yUAPCInwAJHMU7THJfrBSozkcWq5sNM6RcF3S8XyQL2A52KNR9IA==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0"
      }
    },
    "node_modules/@babel/plugin-bugfix-safari-id-destructuring-collision-in-function-expression": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-bugfix-safari-id-destructuring-collision-in-function-expression/-/plugin-bugfix-safari-id-destructuring-collision-in-function-expression-7.27.1.tgz",
      "integrity": "sha512-g4L7OYun04N1WyqMNjldFwlfPCLVkgB54A/YCXICZYBsvJJE3kByKv9c9+R/nAfmIfjl2rKYLNyMHboYbZaWaA==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0"
      }
    },
    "node_modules/@babel/plugin-bugfix-v8-spread-parameters-in-optional-chaining": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-bugfix-v8-spread-parameters-in-optional-chaining/-/plugin-bugfix-v8-spread-parameters-in-optional-chaining-7.27.1.tgz",
      "integrity": "sha512-oO02gcONcD5O1iTLi/6frMJBIwWEHceWGSGqrpCmEL8nogiS6J9PBlE48CaK20/Jx1LuRml9aDftLgdjXT8+Cw==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1",
        "@babel/helper-skip-transparent-expression-wrappers": "^7.27.1",
        "@babel/plugin-transform-optional-chaining": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.13.0"
      }
    },
    "node_modules/@babel/plugin-bugfix-v8-static-class-fields-redefine-readonly": {
      "version": "7.28.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-bugfix-v8-static-class-fields-redefine-readonly/-/plugin-bugfix-v8-static-class-fields-redefine-readonly-7.28.3.tgz",
      "integrity": "sha512-b6YTX108evsvE4YgWyQ921ZAFFQm3Bn+CA3+ZXlNVnPhx+UfsVURoPjfGAPCjBgrqo30yX/C2nZGX96DxvR9Iw==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1",
        "@babel/traverse": "^7.28.3"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0"
      }
    },
    "node_modules/@babel/plugin-external-helpers": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-external-helpers/-/plugin-external-helpers-7.27.1.tgz",
      "integrity": "sha512-0al8J5LZL5fYva7ls8lueIl7WYLMhFz2p0Fx91oM2SEQfcJzEpLs7j7HySGVwHN7KVRiE3NUJUnh2fg9anuThQ==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-proposal-private-property-in-object": {
      "version": "7.21.0-placeholder-for-preset-env.2",
      "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-private-property-in-object/-/plugin-proposal-private-property-in-object-7.21.0-placeholder-for-preset-env.2.tgz",
      "integrity": "sha512-SOSkfJDddaM7mak6cPEpswyTRnuRltl429hMraQEglW+OkovnCzsiszTmsrlY//qLFjCpQDFRvjdm2wA5pPm9w==",
      "dev": true,
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-syntax-import-assertions": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-import-assertions/-/plugin-syntax-import-assertions-7.27.1.tgz",
      "integrity": "sha512-UT/Jrhw57xg4ILHLFnzFpPDlMbcdEicaAtjPQpbj9wa8T4r5KVWCimHcL/460g8Ht0DMxDyjsLgiWSkVjnwPFg==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-syntax-import-attributes": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-import-attributes/-/plugin-syntax-import-attributes-7.27.1.tgz",
      "integrity": "sha512-oFT0FrKHgF53f4vOsZGi2Hh3I35PfSmVs4IBFLFj4dnafP+hIWDLg3VyKmUHfLoLHlyxY4C7DGtmHuJgn+IGww==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-syntax-unicode-sets-regex": {
      "version": "7.18.6",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-unicode-sets-regex/-/plugin-syntax-unicode-sets-regex-7.18.6.tgz",
      "integrity": "sha512-727YkEAPwSIQTv5im8QHz3upqp92JTWhidIC81Tdx4VJYIte/VndKf1qKrfnnhPLiPghStWfvC/iFaMCQu7Nqg==",
      "dev": true,
      "dependencies": {
        "@babel/helper-create-regexp-features-plugin": "^7.18.6",
        "@babel/helper-plugin-utils": "^7.18.6"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0"
      }
    },
    "node_modules/@babel/plugin-transform-arrow-functions": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-arrow-functions/-/plugin-transform-arrow-functions-7.27.1.tgz",
      "integrity": "sha512-8Z4TGic6xW70FKThA5HYEKKyBpOOsucTOD1DjU3fZxDg+K3zBJcXMFnt/4yQiZnf5+MiOMSXQ9PaEK/Ilh1DeA==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-async-generator-functions": {
      "version": "7.28.0",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-async-generator-functions/-/plugin-transform-async-generator-functions-7.28.0.tgz",
      "integrity": "sha512-BEOdvX4+M765icNPZeidyADIvQ1m1gmunXufXxvRESy/jNNyfovIqUyE7MVgGBjWktCoJlzvFA1To2O4ymIO3Q==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1",
        "@babel/helper-remap-async-to-generator": "^7.27.1",
        "@babel/traverse": "^7.28.0"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-async-to-generator": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-async-to-generator/-/plugin-transform-async-to-generator-7.27.1.tgz",
      "integrity": "sha512-NREkZsZVJS4xmTr8qzE5y8AfIPqsdQfRuUiLRTEzb7Qii8iFWCyDKaUV2c0rCuh4ljDZ98ALHP/PetiBV2nddA==",
      "dev": true,
      "dependencies": {
        "@babel/helper-module-imports": "^7.27.1",
        "@babel/helper-plugin-utils": "^7.27.1",
        "@babel/helper-remap-async-to-generator": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-block-scoped-functions": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-block-scoped-functions/-/plugin-transform-block-scoped-functions-7.27.1.tgz",
      "integrity": "sha512-cnqkuOtZLapWYZUYM5rVIdv1nXYuFVIltZ6ZJ7nIj585QsjKM5dhL2Fu/lICXZ1OyIAFc7Qy+bvDAtTXqGrlhg==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-block-scoping": {
      "version": "7.28.4",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-block-scoping/-/plugin-transform-block-scoping-7.28.4.tgz",
      "integrity": "sha512-1yxmvN0MJHOhPVmAsmoW5liWwoILobu/d/ShymZmj867bAdxGbehIrew1DuLpw2Ukv+qDSSPQdYW1dLNE7t11A==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-class-properties": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-class-properties/-/plugin-transform-class-properties-7.27.1.tgz",
      "integrity": "sha512-D0VcalChDMtuRvJIu3U/fwWjf8ZMykz5iZsg77Nuj821vCKI3zCyRLwRdWbsuJ/uRwZhZ002QtCqIkwC/ZkvbA==",
      "dev": true,
      "dependencies": {
        "@babel/helper-create-class-features-plugin": "^7.27.1",
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-class-static-block": {
      "version": "7.28.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-class-static-block/-/plugin-transform-class-static-block-7.28.3.tgz",
      "integrity": "sha512-LtPXlBbRoc4Njl/oh1CeD/3jC+atytbnf/UqLoqTDcEYGUPj022+rvfkbDYieUrSj3CaV4yHDByPE+T2HwfsJg==",
      "dev": true,
      "dependencies": {
        "@babel/helper-create-class-features-plugin": "^7.28.3",
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.12.0"
      }
    },
    "node_modules/@babel/plugin-transform-classes": {
      "version": "7.28.4",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-classes/-/plugin-transform-classes-7.28.4.tgz",
      "integrity": "sha512-cFOlhIYPBv/iBoc+KS3M6et2XPtbT2HiCRfBXWtfpc9OAyostldxIf9YAYB6ypURBBbx+Qv6nyrLzASfJe+hBA==",
      "dev": true,
      "dependencies": {
        "@babel/helper-annotate-as-pure": "^7.27.3",
        "@babel/helper-compilation-targets": "^7.27.2",
        "@babel/helper-globals": "^7.28.0",
        "@babel/helper-plugin-utils": "^7.27.1",
        "@babel/helper-replace-supers": "^7.27.1",
        "@babel/traverse": "^7.28.4"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-computed-properties": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-computed-properties/-/plugin-transform-computed-properties-7.27.1.tgz",
      "integrity": "sha512-lj9PGWvMTVksbWiDT2tW68zGS/cyo4AkZ/QTp0sQT0mjPopCmrSkzxeXkznjqBxzDI6TclZhOJbBmbBLjuOZUw==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1",
        "@babel/template": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-destructuring": {
      "version": "7.28.0",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-destructuring/-/plugin-transform-destructuring-7.28.0.tgz",
      "integrity": "sha512-v1nrSMBiKcodhsyJ4Gf+Z0U/yawmJDBOTpEB3mcQY52r9RIyPneGyAS/yM6seP/8I+mWI3elOMtT5dB8GJVs+A==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1",
        "@babel/traverse": "^7.28.0"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-dotall-regex": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-dotall-regex/-/plugin-transform-dotall-regex-7.27.1.tgz",
      "integrity": "sha512-gEbkDVGRvjj7+T1ivxrfgygpT7GUd4vmODtYpbs0gZATdkX8/iSnOtZSxiZnsgm1YjTgjI6VKBGSJJevkrclzw==",
      "dev": true,
      "dependencies": {
        "@babel/helper-create-regexp-features-plugin": "^7.27.1",
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-duplicate-keys": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-duplicate-keys/-/plugin-transform-duplicate-keys-7.27.1.tgz",
      "integrity": "sha512-MTyJk98sHvSs+cvZ4nOauwTTG1JeonDjSGvGGUNHreGQns+Mpt6WX/dVzWBHgg+dYZhkC4X+zTDfkTU+Vy9y7Q==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-duplicate-named-capturing-groups-regex": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-duplicate-named-capturing-groups-regex/-/plugin-transform-duplicate-named-capturing-groups-regex-7.27.1.tgz",
      "integrity": "sha512-hkGcueTEzuhB30B3eJCbCYeCaaEQOmQR0AdvzpD4LoN0GXMWzzGSuRrxR2xTnCrvNbVwK9N6/jQ92GSLfiZWoQ==",
      "dev": true,
      "dependencies": {
        "@babel/helper-create-regexp-features-plugin": "^7.27.1",
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0"
      }
    },
    "node_modules/@babel/plugin-transform-dynamic-import": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-dynamic-import/-/plugin-transform-dynamic-import-7.27.1.tgz",
      "integrity": "sha512-MHzkWQcEmjzzVW9j2q8LGjwGWpG2mjwaaB0BNQwst3FIjqsg8Ct/mIZlvSPJvfi9y2AC8mi/ktxbFVL9pZ1I4A==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-explicit-resource-management": {
      "version": "7.28.0",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-explicit-resource-management/-/plugin-transform-explicit-resource-management-7.28.0.tgz",
      "integrity": "sha512-K8nhUcn3f6iB+P3gwCv/no7OdzOZQcKchW6N389V6PD8NUWKZHzndOd9sPDVbMoBsbmjMqlB4L9fm+fEFNVlwQ==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1",
        "@babel/plugin-transform-destructuring": "^7.28.0"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-exponentiation-operator": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-exponentiation-operator/-/plugin-transform-exponentiation-operator-7.27.1.tgz",
      "integrity": "sha512-uspvXnhHvGKf2r4VVtBpeFnuDWsJLQ6MF6lGJLC89jBR1uoVeqM416AZtTuhTezOfgHicpJQmoD5YUakO/YmXQ==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-export-namespace-from": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-export-namespace-from/-/plugin-transform-export-namespace-from-7.27.1.tgz",
      "integrity": "sha512-tQvHWSZ3/jH2xuq/vZDy0jNn+ZdXJeM8gHvX4lnJmsc3+50yPlWdZXIc5ay+umX+2/tJIqHqiEqcJvxlmIvRvQ==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-for-of": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-for-of/-/plugin-transform-for-of-7.27.1.tgz",
      "integrity": "sha512-BfbWFFEJFQzLCQ5N8VocnCtA8J1CLkNTe2Ms2wocj75dd6VpiqS5Z5quTYcUoo4Yq+DN0rtikODccuv7RU81sw==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1",
        "@babel/helper-skip-transparent-expression-wrappers": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-function-name": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-function-name/-/plugin-transform-function-name-7.27.1.tgz",
      "integrity": "sha512-1bQeydJF9Nr1eBCMMbC+hdwmRlsv5XYOMu03YSWFwNs0HsAmtSxxF1fyuYPqemVldVyFmlCU7w8UE14LupUSZQ==",
      "dev": true,
      "dependencies": {
        "@babel/helper-compilation-targets": "^7.27.1",
        "@babel/helper-plugin-utils": "^7.27.1",
        "@babel/traverse": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-json-strings": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-json-strings/-/plugin-transform-json-strings-7.27.1.tgz",
      "integrity": "sha512-6WVLVJiTjqcQauBhn1LkICsR2H+zm62I3h9faTDKt1qP4jn2o72tSvqMwtGFKGTpojce0gJs+76eZ2uCHRZh0Q==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-literals": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-literals/-/plugin-transform-literals-7.27.1.tgz",
      "integrity": "sha512-0HCFSepIpLTkLcsi86GG3mTUzxV5jpmbv97hTETW3yzrAij8aqlD36toB1D0daVFJM8NK6GvKO0gslVQmm+zZA==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-logical-assignment-operators": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-logical-assignment-operators/-/plugin-transform-logical-assignment-operators-7.27.1.tgz",
      "integrity": "sha512-SJvDs5dXxiae4FbSL1aBJlG4wvl594N6YEVVn9e3JGulwioy6z3oPjx/sQBO3Y4NwUu5HNix6KJ3wBZoewcdbw==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-member-expression-literals": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-member-expression-literals/-/plugin-transform-member-expression-literals-7.27.1.tgz",
      "integrity": "sha512-hqoBX4dcZ1I33jCSWcXrP+1Ku7kdqXf1oeah7ooKOIiAdKQ+uqftgCFNOSzA5AMS2XIHEYeGFg4cKRCdpxzVOQ==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-modules-amd": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-modules-amd/-/plugin-transform-modules-amd-7.27.1.tgz",
      "integrity": "sha512-iCsytMg/N9/oFq6n+gFTvUYDZQOMK5kEdeYxmxt91fcJGycfxVP9CnrxoliM0oumFERba2i8ZtwRUCMhvP1LnA==",
      "dev": true,
      "dependencies": {
        "@babel/helper-module-transforms": "^7.27.1",
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-modules-commonjs": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-modules-commonjs/-/plugin-transform-modules-commonjs-7.27.1.tgz",
      "integrity": "sha512-OJguuwlTYlN0gBZFRPqwOGNWssZjfIUdS7HMYtN8c1KmwpwHFBwTeFZrg9XZa+DFTitWOW5iTAG7tyCUPsCCyw==",
      "dev": true,
      "dependencies": {
        "@babel/helper-module-transforms": "^7.27.1",
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-modules-systemjs": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-modules-systemjs/-/plugin-transform-modules-systemjs-7.27.1.tgz",
      "integrity": "sha512-w5N1XzsRbc0PQStASMksmUeqECuzKuTJer7kFagK8AXgpCMkeDMO5S+aaFb7A51ZYDF7XI34qsTX+fkHiIm5yA==",
      "dev": true,
      "dependencies": {
        "@babel/helper-module-transforms": "^7.27.1",
        "@babel/helper-plugin-utils": "^7.27.1",
        "@babel/helper-validator-identifier": "^7.27.1",
        "@babel/traverse": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-modules-umd": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-modules-umd/-/plugin-transform-modules-umd-7.27.1.tgz",
      "integrity": "sha512-iQBE/xC5BV1OxJbp6WG7jq9IWiD+xxlZhLrdwpPkTX3ydmXdvoCpyfJN7acaIBZaOqTfr76pgzqBJflNbeRK+w==",
      "dev": true,
      "dependencies": {
        "@babel/helper-module-transforms": "^7.27.1",
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-named-capturing-groups-regex": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-named-capturing-groups-regex/-/plugin-transform-named-capturing-groups-regex-7.27.1.tgz",
      "integrity": "sha512-SstR5JYy8ddZvD6MhV0tM/j16Qds4mIpJTOd1Yu9J9pJjH93bxHECF7pgtc28XvkzTD6Pxcm/0Z73Hvk7kb3Ng==",
      "dev": true,
      "dependencies": {
        "@babel/helper-create-regexp-features-plugin": "^7.27.1",
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0"
      }
    },
    "node_modules/@babel/plugin-transform-new-target": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-new-target/-/plugin-transform-new-target-7.27.1.tgz",
      "integrity": "sha512-f6PiYeqXQ05lYq3TIfIDu/MtliKUbNwkGApPUvyo6+tc7uaR4cPjPe7DFPr15Uyycg2lZU6btZ575CuQoYh7MQ==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-nullish-coalescing-operator": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-nullish-coalescing-operator/-/plugin-transform-nullish-coalescing-operator-7.27.1.tgz",
      "integrity": "sha512-aGZh6xMo6q9vq1JGcw58lZ1Z0+i0xB2x0XaauNIUXd6O1xXc3RwoWEBlsTQrY4KQ9Jf0s5rgD6SiNkaUdJegTA==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-numeric-separator": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-numeric-separator/-/plugin-transform-numeric-separator-7.27.1.tgz",
      "integrity": "sha512-fdPKAcujuvEChxDBJ5c+0BTaS6revLV7CJL08e4m3de8qJfNIuCc2nc7XJYOjBoTMJeqSmwXJ0ypE14RCjLwaw==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-object-rest-spread": {
      "version": "7.28.4",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-object-rest-spread/-/plugin-transform-object-rest-spread-7.28.4.tgz",
      "integrity": "sha512-373KA2HQzKhQCYiRVIRr+3MjpCObqzDlyrM6u4I201wL8Mp2wHf7uB8GhDwis03k2ti8Zr65Zyyqs1xOxUF/Ew==",
      "dev": true,
      "dependencies": {
        "@babel/helper-compilation-targets": "^7.27.2",
        "@babel/helper-plugin-utils": "^7.27.1",
        "@babel/plugin-transform-destructuring": "^7.28.0",
        "@babel/plugin-transform-parameters": "^7.27.7",
        "@babel/traverse": "^7.28.4"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-object-super": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-object-super/-/plugin-transform-object-super-7.27.1.tgz",
      "integrity": "sha512-SFy8S9plRPbIcxlJ8A6mT/CxFdJx/c04JEctz4jf8YZaVS2px34j7NXRrlGlHkN/M2gnpL37ZpGRGVFLd3l8Ng==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1",
        "@babel/helper-replace-supers": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-optional-catch-binding": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-optional-catch-binding/-/plugin-transform-optional-catch-binding-7.27.1.tgz",
      "integrity": "sha512-txEAEKzYrHEX4xSZN4kJ+OfKXFVSWKB2ZxM9dpcE3wT7smwkNmXo5ORRlVzMVdJbD+Q8ILTgSD7959uj+3Dm3Q==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-optional-chaining": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-optional-chaining/-/plugin-transform-optional-chaining-7.27.1.tgz",
      "integrity": "sha512-BQmKPPIuc8EkZgNKsv0X4bPmOoayeu4F1YCwx2/CfmDSXDbp7GnzlUH+/ul5VGfRg1AoFPsrIThlEBj2xb4CAg==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1",
        "@babel/helper-skip-transparent-expression-wrappers": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-parameters": {
      "version": "7.27.7",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-parameters/-/plugin-transform-parameters-7.27.7.tgz",
      "integrity": "sha512-qBkYTYCb76RRxUM6CcZA5KRu8K4SM8ajzVeUgVdMVO9NN9uI/GaVmBg/WKJJGnNokV9SY8FxNOVWGXzqzUidBg==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-private-methods": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-private-methods/-/plugin-transform-private-methods-7.27.1.tgz",
      "integrity": "sha512-10FVt+X55AjRAYI9BrdISN9/AQWHqldOeZDUoLyif1Kn05a56xVBXb8ZouL8pZ9jem8QpXaOt8TS7RHUIS+GPA==",
      "dev": true,
      "dependencies": {
        "@babel/helper-create-class-features-plugin": "^7.27.1",
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-private-property-in-object": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-private-property-in-object/-/plugin-transform-private-property-in-object-7.27.1.tgz",
      "integrity": "sha512-5J+IhqTi1XPa0DXF83jYOaARrX+41gOewWbkPyjMNRDqgOCqdffGh8L3f/Ek5utaEBZExjSAzcyjmV9SSAWObQ==",
      "dev": true,
      "dependencies": {
        "@babel/helper-annotate-as-pure": "^7.27.1",
        "@babel/helper-create-class-features-plugin": "^7.27.1",
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-property-literals": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-property-literals/-/plugin-transform-property-literals-7.27.1.tgz",
      "integrity": "sha512-oThy3BCuCha8kDZ8ZkgOg2exvPYUlprMukKQXI1r1pJ47NCvxfkEy8vK+r/hT9nF0Aa4H1WUPZZjHTFtAhGfmQ==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-regenerator": {
      "version": "7.28.4",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-regenerator/-/plugin-transform-regenerator-7.28.4.tgz",
      "integrity": "sha512-+ZEdQlBoRg9m2NnzvEeLgtvBMO4tkFBw5SQIUgLICgTrumLoU7lr+Oghi6km2PFj+dbUt2u1oby2w3BDO9YQnA==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-regexp-modifiers": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-regexp-modifiers/-/plugin-transform-regexp-modifiers-7.27.1.tgz",
      "integrity": "sha512-TtEciroaiODtXvLZv4rmfMhkCv8jx3wgKpL68PuiPh2M4fvz5jhsA7697N1gMvkvr/JTF13DrFYyEbY9U7cVPA==",
      "dev": true,
      "dependencies": {
        "@babel/helper-create-regexp-features-plugin": "^7.27.1",
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0"
      }
    },
    "node_modules/@babel/plugin-transform-reserved-words": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-reserved-words/-/plugin-transform-reserved-words-7.27.1.tgz",
      "integrity": "sha512-V2ABPHIJX4kC7HegLkYoDpfg9PVmuWy/i6vUM5eGK22bx4YVFD3M5F0QQnWQoDs6AGsUWTVOopBiMFQgHaSkVw==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-shorthand-properties": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-shorthand-properties/-/plugin-transform-shorthand-properties-7.27.1.tgz",
      "integrity": "sha512-N/wH1vcn4oYawbJ13Y/FxcQrWk63jhfNa7jef0ih7PHSIHX2LB7GWE1rkPrOnka9kwMxb6hMl19p7lidA+EHmQ==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-spread": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-spread/-/plugin-transform-spread-7.27.1.tgz",
      "integrity": "sha512-kpb3HUqaILBJcRFVhFUs6Trdd4mkrzcGXss+6/mxUd273PfbWqSDHRzMT2234gIg2QYfAjvXLSquP1xECSg09Q==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1",
        "@babel/helper-skip-transparent-expression-wrappers": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-sticky-regex": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-sticky-regex/-/plugin-transform-sticky-regex-7.27.1.tgz",
      "integrity": "sha512-lhInBO5bi/Kowe2/aLdBAawijx+q1pQzicSgnkB6dUPc1+RC8QmJHKf2OjvU+NZWitguJHEaEmbV6VWEouT58g==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-template-literals": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-template-literals/-/plugin-transform-template-literals-7.27.1.tgz",
      "integrity": "sha512-fBJKiV7F2DxZUkg5EtHKXQdbsbURW3DZKQUWphDum0uRP6eHGGa/He9mc0mypL680pb+e/lDIthRohlv8NCHkg==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-typeof-symbol": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-typeof-symbol/-/plugin-transform-typeof-symbol-7.27.1.tgz",
      "integrity": "sha512-RiSILC+nRJM7FY5srIyc4/fGIwUhyDuuBSdWn4y6yT6gm652DpCHZjIipgn6B7MQ1ITOUnAKWixEUjQRIBIcLw==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-unicode-escapes": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-unicode-escapes/-/plugin-transform-unicode-escapes-7.27.1.tgz",
      "integrity": "sha512-Ysg4v6AmF26k9vpfFuTZg8HRfVWzsh1kVfowA23y9j/Gu6dOuahdUVhkLqpObp3JIv27MLSii6noRnuKN8H0Mg==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-unicode-property-regex": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-unicode-property-regex/-/plugin-transform-unicode-property-regex-7.27.1.tgz",
      "integrity": "sha512-uW20S39PnaTImxp39O5qFlHLS9LJEmANjMG7SxIhap8rCHqu0Ik+tLEPX5DKmHn6CsWQ7j3lix2tFOa5YtL12Q==",
      "dev": true,
      "dependencies": {
        "@babel/helper-create-regexp-features-plugin": "^7.27.1",
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-unicode-regex": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-unicode-regex/-/plugin-transform-unicode-regex-7.27.1.tgz",
      "integrity": "sha512-xvINq24TRojDuyt6JGtHmkVkrfVV3FPT16uytxImLeBZqW3/H52yN+kM1MGuyPkIQxrzKwPHs5U/MP3qKyzkGw==",
      "dev": true,
      "dependencies": {
        "@babel/helper-create-regexp-features-plugin": "^7.27.1",
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-unicode-sets-regex": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-unicode-sets-regex/-/plugin-transform-unicode-sets-regex-7.27.1.tgz",
      "integrity": "sha512-EtkOujbc4cgvb0mlpQefi4NTPBzhSIevblFevACNLUspmrALgmEBdL/XfnyyITfd8fKBZrZys92zOWcik7j9Tw==",
      "dev": true,
      "dependencies": {
        "@babel/helper-create-regexp-features-plugin": "^7.27.1",
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0"
      }
    },
    "node_modules/@babel/preset-env": {
      "version": "7.28.3",
      "resolved": "https://registry.npmjs.org/@babel/preset-env/-/preset-env-7.28.3.tgz",
      "integrity": "sha512-ROiDcM+GbYVPYBOeCR6uBXKkQpBExLl8k9HO1ygXEyds39j+vCCsjmj7S8GOniZQlEs81QlkdJZe76IpLSiqpg==",
      "dev": true,
      "dependencies": {
        "@babel/compat-data": "^7.28.0",
        "@babel/helper-compilation-targets": "^7.27.2",
        "@babel/helper-plugin-utils": "^7.27.1",
        "@babel/helper-validator-option": "^7.27.1",
        "@babel/plugin-bugfix-firefox-class-in-computed-class-key": "^7.27.1",
        "@babel/plugin-bugfix-safari-class-field-initializer-scope": "^7.27.1",
        "@babel/plugin-bugfix-safari-id-destructuring-collision-in-function-expression": "^7.27.1",
        "@babel/plugin-bugfix-v8-spread-parameters-in-optional-chaining": "^7.27.1",
        "@babel/plugin-bugfix-v8-static-class-fields-redefine-readonly": "^7.28.3",
        "@babel/plugin-proposal-private-property-in-object": "7.21.0-placeholder-for-preset-env.2",
        "@babel/plugin-syntax-import-assertions": "^7.27.1",
        "@babel/plugin-syntax-import-attributes": "^7.27.1",
        "@babel/plugin-syntax-unicode-sets-regex": "^7.18.6",
        "@babel/plugin-transform-arrow-functions": "^7.27.1",
        "@babel/plugin-transform-async-generator-functions": "^7.28.0",
        "@babel/plugin-transform-async-to-generator": "^7.27.1",
        "@babel/plugin-transform-block-scoped-functions": "^7.27.1",
        "@babel/plugin-transform-block-scoping": "^7.28.0",
        "@babel/plugin-transform-class-properties": "^7.27.1",
        "@babel/plugin-transform-class-static-block": "^7.28.3",
        "@babel/plugin-transform-classes": "^7.28.3",
        "@babel/plugin-transform-computed-properties": "^7.27.1",
        "@babel/plugin-transform-destructuring": "^7.28.0",
        "@babel/plugin-transform-dotall-regex": "^7.27.1",
        "@babel/plugin-transform-duplicate-keys": "^7.27.1",
        "@babel/plugin-transform-duplicate-named-capturing-groups-regex": "^7.27.1",
        "@babel/plugin-transform-dynamic-import": "^7.27.1",
        "@babel/plugin-transform-explicit-resource-management": "^7.28.0",
        "@babel/plugin-transform-exponentiation-operator": "^7.27.1",
        "@babel/plugin-transform-export-namespace-from": "^7.27.1",
        "@babel/plugin-transform-for-of": "^7.27.1",
        "@babel/plugin-transform-function-name": "^7.27.1",
        "@babel/plugin-transform-json-strings": "^7.27.1",
        "@babel/plugin-transform-literals": "^7.27.1",
        "@babel/plugin-transform-logical-assignment-operators": "^7.27.1",
        "@babel/plugin-transform-member-expression-literals": "^7.27.1",
        "@babel/plugin-transform-modules-amd": "^7.27.1",
        "@babel/plugin-transform-modules-commonjs": "^7.27.1",
        "@babel/plugin-transform-modules-systemjs": "^7.27.1",
        "@babel/plugin-transform-modules-umd": "^7.27.1",
        "@babel/plugin-transform-named-capturing-groups-regex": "^7.27.1",
        "@babel/plugin-transform-new-target": "^7.27.1",
        "@babel/plugin-transform-nullish-coalescing-operator": "^7.27.1",
        "@babel/plugin-transform-numeric-separator": "^7.27.1",
        "@babel/plugin-transform-object-rest-spread": "^7.28.0",
        "@babel/plugin-transform-object-super": "^7.27.1",
        "@babel/plugin-transform-optional-catch-binding": "^7.27.1",
        "@babel/plugin-transform-optional-chaining": "^7.27.1",
        "@babel/plugin-transform-parameters": "^7.27.7",
        "@babel/plugin-transform-private-methods": "^7.27.1",
        "@babel/plugin-transform-private-property-in-object": "^7.27.1",
        "@babel/plugin-transform-property-literals": "^7.27.1",
        "@babel/plugin-transform-regenerator": "^7.28.3",
        "@babel/plugin-transform-regexp-modifiers": "^7.27.1",
        "@babel/plugin-transform-reserved-words": "^7.27.1",
        "@babel/plugin-transform-shorthand-properties": "^7.27.1",
        "@babel/plugin-transform-spread": "^7.27.1",
        "@babel/plugin-transform-sticky-regex": "^7.27.1",
        "@babel/plugin-transform-template-literals": "^7.27.1",
        "@babel/plugin-transform-typeof-symbol": "^7.27.1",
        "@babel/plugin-transform-unicode-escapes": "^7.27.1",
        "@babel/plugin-transform-unicode-property-regex": "^7.27.1",
        "@babel/plugin-transform-unicode-regex": "^7.27.1",
        "@babel/plugin-transform-unicode-sets-regex": "^7.27.1",
        "@babel/preset-modules": "0.1.6-no-external-plugins",
        "babel-plugin-polyfill-corejs2": "^0.4.14",
        "babel-plugin-polyfill-corejs3": "^0.13.0",
        "babel-plugin-polyfill-regenerator": "^0.6.5",
        "core-js-compat": "^3.43.0",
        "semver": "^6.3.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/preset-modules": {
      "version": "0.1.6-no-external-plugins",
      "resolved": "https://registry.npmjs.org/@babel/preset-modules/-/preset-modules-0.1.6-no-external-plugins.tgz",
      "integrity": "sha512-HrcgcIESLm9aIR842yhJ5RWan/gebQUJ6E/E5+rf0y9o6oj7w0Br+sWuL6kEQ/o/AdfvR1Je9jG18/gnpwjEyA==",
      "dev": true,
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.0.0",
        "@babel/types": "^7.4.4",
        "esutils": "^2.0.2"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0 || ^8.0.0-0 <8.0.0"
      }
    },
    "node_modules/@babel/template": {
      "version": "7.27.2",
      "resolved": "https://registry.npmjs.org/@babel/template/-/template-7.27.2.tgz",
      "integrity": "sha512-LPDZ85aEJyYSd18/DkjNh4/y1ntkE5KwUHWTiqgRxruuZL2F1yuHligVHLvcHY2vMHXttKFpJn6LwfI7cw7ODw==",
      "dev": true,
      "dependencies": {
        "@babel/code-frame": "^7.27.1",
        "@babel/parser": "^7.27.2",
        "@babel/types": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/traverse": {
      "version": "7.28.4",
      "resolved": "https://registry.npmjs.org/@babel/traverse/-/traverse-7.28.4.tgz",
      "integrity": "sha512-YEzuboP2qvQavAcjgQNVgsvHIDv6ZpwXvcvjmyySP2DIMuByS/6ioU5G9pYrWHM6T2YDfc7xga9iNzYOs12CFQ==",
      "dev": true,
      "dependencies": {
        "@babel/code-frame": "^7.27.1",
        "@babel/generator": "^7.28.3",
        "@babel/helper-globals": "^7.28.0",
        "@babel/parser": "^7.28.4",
        "@babel/template": "^7.27.2",
        "@babel/types": "^7.28.4",
        "debug": "^4.3.1"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/types": {
      "version": "7.28.4",
      "resolved": "https://registry.npmjs.org/@babel/types/-/types-7.28.4.tgz",
      "integrity": "sha512-bkFqkLhh3pMBUQQkpVgWDWq/lqzc2678eUyDlTBhRqhCHFguYYGM0Efga7tYk4TogG/3x0EEl66/OQ+WGbWB/Q==",
      "dev": true,
      "dependencies": {
        "@babel/helper-string-parser": "^7.27.1",
        "@babel/helper-validator-identifier": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@jridgewell/gen-mapping": {
      "version": "0.3.13",
      "resolved": "https://registry.npmjs.org/@jridgewell/gen-mapping/-/gen-mapping-0.3.13.tgz",
      "integrity": "sha512-2kkt/7niJ6MgEPxF0bYdQ6etZaA+fQvDcLKckhy1yIQOzaoKjBBjSj63/aLVjYE3qhRt5dvM+uUyfCg6UKCBbA==",
      "dev": true,
      "dependencies": {
        "@jridgewell/sourcemap-codec": "^1.5.0",
        "@jridgewell/trace-mapping": "^0.3.24"
      }
    },
    "node_modules/@jridgewell/remapping": {
      "version": "2.3.5",
      "resolved": "https://registry.npmjs.org/@jridgewell/remapping/-/remapping-2.3.5.tgz",
      "integrity": "sha512-LI9u/+laYG4Ds1TDKSJW2YPrIlcVYOwi2fUC6xB43lueCjgxV4lffOCZCtYFiH6TNOX+tQKXx97T4IKHbhyHEQ==",
      "dev": true,
      "dependencies": {
        "@jridgewell/gen-mapping": "^0.3.5",
        "@jridgewell/trace-mapping": "^0.3.24"
      }
    },
    "node_modules/@jridgewell/resolve-uri": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/@jridgewell/resolve-uri/-/resolve-uri-3.1.2.tgz",
      "integrity": "sha512-bRISgCIjP20/tbWSPWMEi54QVPRZExkuD9lJL+UIxUKtwVJA8wW1Trb1jMs1RFXo1CBTNZ/5hpC9QvmKWdopKw==",
      "dev": true,
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@jridgewell/sourcemap-codec": {
      "version": "1.5.5",
      "resolved": "https://registry.npmjs.org/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.5.5.tgz",
      "integrity": "sha512-cYQ9310grqxueWbl+WuIUIaiUaDcj7WOq5fVhEljNVgRfOUhY9fy2zTvfoqWsnebh8Sl70VScFbICvJnLKB0Og==",
      "dev": true
    },
    "node_modules/@jridgewell/trace-mapping": {
      "version": "0.3.31",
      "resolved": "https://registry.npmjs.org/@jridgewell/trace-mapping/-/trace-mapping-0.3.31.tgz",
      "integrity": "sha512-zzNR+SdQSDJzc8joaeP8QQoCQr8NuYx2dIIytl1QeBEZHJ9uW6hebsrYgbz8hJwUQao3TWCMtmfV8Nu1twOLAw==",
      "dev": true,
      "dependencies": {
        "@jridgewell/resolve-uri": "^3.1.0",
        "@jridgewell/sourcemap-codec": "^1.4.14"
      }
    },
    "node_modules/@rollup/plugin-babel": {
      "version": "6.1.0",
      "resolved": "https://registry.npmjs.org/@rollup/plugin-babel/-/plugin-babel-6.1.0.tgz",
      "integrity": "sha512-dFZNuFD2YRcoomP4oYf+DvQNSUA9ih+A3vUqopQx5EdtPGo3WBnQcI/S8pwpz91UsGfL0HsMSOlaMld8HrbubA==",
      "dev": true,
      "dependencies": {
        "@babel/helper-module-imports": "^7.18.6",
        "@rollup/pluginutils": "^5.0.1"
      },
      "engines": {
        "node": ">=14.0.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0",
        "@types/babel__core": "^7.1.9",
        "rollup": "^1.20.0||^2.0.0||^3.0.0||^4.0.0"
      },
      "peerDependenciesMeta": {
        "@types/babel__core": {
          "optional": true
        },
        "rollup": {
          "optional": true
        }
      }
    },
    "node_modules/@rollup/plugin-commonjs": {
      "version": "28.0.8",
      "resolved": "https://registry.npmjs.org/@rollup/plugin-commonjs/-/plugin-commonjs-28.0.8.tgz",
      "integrity": "sha512-o1Ug9PxYsF61R7/NXO/GgMZZproLd/WH2XA53Tp9ppf6bU1lMlTtC/gUM6zM3mesi2E0rypk+PNtVrELREyWEQ==",
      "dev": true,
      "dependencies": {
        "@rollup/pluginutils": "^5.0.1",
        "commondir": "^1.0.1",
        "estree-walker": "^2.0.2",
        "fdir": "^6.2.0",
        "is-reference": "1.2.1",
        "magic-string": "^0.30.3",
        "picomatch": "^4.0.2"
      },
      "engines": {
        "node": ">=16.0.0 || 14 >= 14.17"
      },
      "peerDependencies": {
        "rollup": "^2.68.0||^3.0.0||^4.0.0"
      },
      "peerDependenciesMeta": {
        "rollup": {
          "optional": true
        }
      }
    },
    "node_modules/@rollup/plugin-json": {
      "version": "6.1.0",
      "resolved": "https://registry.npmjs.org/@rollup/plugin-json/-/plugin-json-6.1.0.tgz",
      "integrity": "sha512-EGI2te5ENk1coGeADSIwZ7G2Q8CJS2sF120T7jLw4xFw9n7wIOXHo+kIYRAoVpJAN+kmqZSoO3Fp4JtoNF4ReA==",
      "dev": true,
      "dependencies": {
        "@rollup/pluginutils": "^5.1.0"
      },
      "engines": {
        "node": ">=14.0.0"
      },
      "peerDependencies": {
        "rollup": "^1.20.0||^2.0.0||^3.0.0||^4.0.0"
      },
      "peerDependenciesMeta": {
        "rollup": {
          "optional": true
        }
      }
    },
    "node_modules/@rollup/plugin-node-resolve": {
      "version": "16.0.3",
      "resolved": "https://registry.npmjs.org/@rollup/plugin-node-resolve/-/plugin-node-resolve-16.0.3.tgz",
      "integrity": "sha512-lUYM3UBGuM93CnMPG1YocWu7X802BrNF3jW2zny5gQyLQgRFJhV1Sq0Zi74+dh/6NBx1DxFC4b4GXg9wUCG5Qg==",
      "dev": true,
      "dependencies": {
        "@rollup/pluginutils": "^5.0.1",
        "@types/resolve": "1.20.2",
        "deepmerge": "^4.2.2",
        "is-module": "^1.0.0",
        "resolve": "^1.22.1"
      },
      "engines": {
        "node": ">=14.0.0"
      },
      "peerDependencies": {
        "rollup": "^2.78.0||^3.0.0||^4.0.0"
      },
      "peerDependenciesMeta": {
        "rollup": {
          "optional": true
        }
      }
    },
    "node_modules/@rollup/plugin-typescript": {
      "version": "12.1.4",
      "resolved": "https://registry.npmjs.org/@rollup/plugin-typescript/-/plugin-typescript-12.1.4.tgz",
      "integrity": "sha512-s5Hx+EtN60LMlDBvl5f04bEiFZmAepk27Q+mr85L/00zPDn1jtzlTV6FWn81MaIwqfWzKxmOJrBWHU6vtQyedQ==",
      "dev": true,
      "dependencies": {
        "@rollup/pluginutils": "^5.1.0",
        "resolve": "^1.22.1"
      },
      "engines": {
        "node": ">=14.0.0"
      },
      "peerDependencies": {
        "rollup": "^2.14.0||^3.0.0||^4.0.0",
        "tslib": "*",
        "typescript": ">=3.7.0"
      },
      "peerDependenciesMeta": {
        "rollup": {
          "optional": true
        },
        "tslib": {
          "optional": true
        }
      }
    },
    "node_modules/@rollup/pluginutils": {
      "version": "5.3.0",
      "resolved": "https://registry.npmjs.org/@rollup/pluginutils/-/pluginutils-5.3.0.tgz",
      "integrity": "sha512-5EdhGZtnu3V88ces7s53hhfK5KSASnJZv8Lulpc04cWO3REESroJXg73DFsOmgbU2BhwV0E20bu2IDZb3VKW4Q==",
      "dev": true,
      "dependencies": {
        "@types/estree": "^1.0.0",
        "estree-walker": "^2.0.2",
        "picomatch": "^4.0.2"
      },
      "engines": {
        "node": ">=14.0.0"
      },
      "peerDependencies": {
        "rollup": "^1.20.0||^2.0.0||^3.0.0||^4.0.0"
      },
      "peerDependenciesMeta": {
        "rollup": {
          "optional": true
        }
      }
    },
    "node_modules/@rollup/rollup-android-arm-eabi": {
      "version": "4.52.5",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-android-arm-eabi/-/rollup-android-arm-eabi-4.52.5.tgz",
      "integrity": "sha512-8c1vW4ocv3UOMp9K+gToY5zL2XiiVw3k7f1ksf4yO1FlDFQ1C2u72iACFnSOceJFsWskc2WZNqeRhFRPzv+wtQ==",
      "cpu": [
        "arm"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "android"
      ]
    },
    "node_modules/@rollup/rollup-android-arm64": {
      "version": "4.52.5",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-android-arm64/-/rollup-android-arm64-4.52.5.tgz",
      "integrity": "sha512-mQGfsIEFcu21mvqkEKKu2dYmtuSZOBMmAl5CFlPGLY94Vlcm+zWApK7F/eocsNzp8tKmbeBP8yXyAbx0XHsFNA==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "android"
      ]
    },
    "node_modules/@rollup/rollup-darwin-arm64": {
      "version": "4.52.5",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-darwin-arm64/-/rollup-darwin-arm64-4.52.5.tgz",
      "integrity": "sha512-takF3CR71mCAGA+v794QUZ0b6ZSrgJkArC+gUiG6LB6TQty9T0Mqh3m2ImRBOxS2IeYBo4lKWIieSvnEk2OQWA==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "darwin"
      ]
    },
    "node_modules/@rollup/rollup-darwin-x64": {
      "version": "4.52.5",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-darwin-x64/-/rollup-darwin-x64-4.52.5.tgz",
      "integrity": "sha512-W901Pla8Ya95WpxDn//VF9K9u2JbocwV/v75TE0YIHNTbhqUTv9w4VuQ9MaWlNOkkEfFwkdNhXgcLqPSmHy0fA==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "darwin"
      ]
    },
    "node_modules/@rollup/rollup-freebsd-arm64": {
      "version": "4.52.5",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-freebsd-arm64/-/rollup-freebsd-arm64-4.52.5.tgz",
      "integrity": "sha512-QofO7i7JycsYOWxe0GFqhLmF6l1TqBswJMvICnRUjqCx8b47MTo46W8AoeQwiokAx3zVryVnxtBMcGcnX12LvA==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "freebsd"
      ]
    },
    "node_modules/@rollup/rollup-freebsd-x64": {
      "version": "4.52.5",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-freebsd-x64/-/rollup-freebsd-x64-4.52.5.tgz",
      "integrity": "sha512-jr21b/99ew8ujZubPo9skbrItHEIE50WdV86cdSoRkKtmWa+DDr6fu2c/xyRT0F/WazZpam6kk7IHBerSL7LDQ==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "freebsd"
      ]
    },
    "node_modules/@rollup/rollup-linux-arm-gnueabihf": {
      "version": "4.52.5",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-arm-gnueabihf/-/rollup-linux-arm-gnueabihf-4.52.5.tgz",
      "integrity": "sha512-PsNAbcyv9CcecAUagQefwX8fQn9LQ4nZkpDboBOttmyffnInRy8R8dSg6hxxl2Re5QhHBf6FYIDhIj5v982ATQ==",
      "cpu": [
        "arm"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-arm-musleabihf": {
      "version": "4.52.5",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-arm-musleabihf/-/rollup-linux-arm-musleabihf-4.52.5.tgz",
      "integrity": "sha512-Fw4tysRutyQc/wwkmcyoqFtJhh0u31K+Q6jYjeicsGJJ7bbEq8LwPWV/w0cnzOqR2m694/Af6hpFayLJZkG2VQ==",
      "cpu": [
        "arm"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-arm64-gnu": {
      "version": "4.52.5",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-arm64-gnu/-/rollup-linux-arm64-gnu-4.52.5.tgz",
      "integrity": "sha512-a+3wVnAYdQClOTlyapKmyI6BLPAFYs0JM8HRpgYZQO02rMR09ZcV9LbQB+NL6sljzG38869YqThrRnfPMCDtZg==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-arm64-musl": {
      "version": "4.52.5",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-arm64-musl/-/rollup-linux-arm64-musl-4.52.5.tgz",
      "integrity": "sha512-AvttBOMwO9Pcuuf7m9PkC1PUIKsfaAJ4AYhy944qeTJgQOqJYJ9oVl2nYgY7Rk0mkbsuOpCAYSs6wLYB2Xiw0Q==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-loong64-gnu": {
      "version": "4.52.5",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-loong64-gnu/-/rollup-linux-loong64-gnu-4.52.5.tgz",
      "integrity": "sha512-DkDk8pmXQV2wVrF6oq5tONK6UHLz/XcEVow4JTTerdeV1uqPeHxwcg7aFsfnSm9L+OO8WJsWotKM2JJPMWrQtA==",
      "cpu": [
        "loong64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-ppc64-gnu": {
      "version": "4.52.5",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-ppc64-gnu/-/rollup-linux-ppc64-gnu-4.52.5.tgz",
      "integrity": "sha512-W/b9ZN/U9+hPQVvlGwjzi+Wy4xdoH2I8EjaCkMvzpI7wJUs8sWJ03Rq96jRnHkSrcHTpQe8h5Tg3ZzUPGauvAw==",
      "cpu": [
        "ppc64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-riscv64-gnu": {
      "version": "4.52.5",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-riscv64-gnu/-/rollup-linux-riscv64-gnu-4.52.5.tgz",
      "integrity": "sha512-sjQLr9BW7R/ZiXnQiWPkErNfLMkkWIoCz7YMn27HldKsADEKa5WYdobaa1hmN6slu9oWQbB6/jFpJ+P2IkVrmw==",
      "cpu": [
        "riscv64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-riscv64-musl": {
      "version": "4.52.5",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-riscv64-musl/-/rollup-linux-riscv64-musl-4.52.5.tgz",
      "integrity": "sha512-hq3jU/kGyjXWTvAh2awn8oHroCbrPm8JqM7RUpKjalIRWWXE01CQOf/tUNWNHjmbMHg/hmNCwc/Pz3k1T/j/Lg==",
      "cpu": [
        "riscv64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-s390x-gnu": {
      "version": "4.52.5",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-s390x-gnu/-/rollup-linux-s390x-gnu-4.52.5.tgz",
      "integrity": "sha512-gn8kHOrku8D4NGHMK1Y7NA7INQTRdVOntt1OCYypZPRt6skGbddska44K8iocdpxHTMMNui5oH4elPH4QOLrFQ==",
      "cpu": [
        "s390x"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-x64-gnu": {
      "version": "4.52.5",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-x64-gnu/-/rollup-linux-x64-gnu-4.52.5.tgz",
      "integrity": "sha512-hXGLYpdhiNElzN770+H2nlx+jRog8TyynpTVzdlc6bndktjKWyZyiCsuDAlpd+j+W+WNqfcyAWz9HxxIGfZm1Q==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-x64-musl": {
      "version": "4.52.5",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-x64-musl/-/rollup-linux-x64-musl-4.52.5.tgz",
      "integrity": "sha512-arCGIcuNKjBoKAXD+y7XomR9gY6Mw7HnFBv5Rw7wQRvwYLR7gBAgV7Mb2QTyjXfTveBNFAtPt46/36vV9STLNg==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-openharmony-arm64": {
      "version": "4.52.5",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-openharmony-arm64/-/rollup-openharmony-arm64-4.52.5.tgz",
      "integrity": "sha512-QoFqB6+/9Rly/RiPjaomPLmR/13cgkIGfA40LHly9zcH1S0bN2HVFYk3a1eAyHQyjs3ZJYlXvIGtcCs5tko9Cw==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "openharmony"
      ]
    },
    "node_modules/@rollup/rollup-win32-arm64-msvc": {
      "version": "4.52.5",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-win32-arm64-msvc/-/rollup-win32-arm64-msvc-4.52.5.tgz",
      "integrity": "sha512-w0cDWVR6MlTstla1cIfOGyl8+qb93FlAVutcor14Gf5Md5ap5ySfQ7R9S/NjNaMLSFdUnKGEasmVnu3lCMqB7w==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "win32"
      ]
    },
    "node_modules/@rollup/rollup-win32-ia32-msvc": {
      "version": "4.52.5",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-win32-ia32-msvc/-/rollup-win32-ia32-msvc-4.52.5.tgz",
      "integrity": "sha512-Aufdpzp7DpOTULJCuvzqcItSGDH73pF3ko/f+ckJhxQyHtp67rHw3HMNxoIdDMUITJESNE6a8uh4Lo4SLouOUg==",
      "cpu": [
        "ia32"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "win32"
      ]
    },
    "node_modules/@rollup/rollup-win32-x64-gnu": {
      "version": "4.52.5",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-win32-x64-gnu/-/rollup-win32-x64-gnu-4.52.5.tgz",
      "integrity": "sha512-UGBUGPFp1vkj6p8wCRraqNhqwX/4kNQPS57BCFc8wYh0g94iVIW33wJtQAx3G7vrjjNtRaxiMUylM0ktp/TRSQ==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "win32"
      ]
    },
    "node_modules/@rollup/rollup-win32-x64-msvc": {
      "version": "4.52.5",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-win32-x64-msvc/-/rollup-win32-x64-msvc-4.52.5.tgz",
      "integrity": "sha512-TAcgQh2sSkykPRWLrdyy2AiceMckNf5loITqXxFI5VuQjS5tSuw3WlwdN8qv8vzjLAUTvYaH/mVjSFpbkFbpTg==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "win32"
      ]
    },
    "node_modules/@types/estree": {
      "version": "1.0.8",
      "resolved": "https://registry.npmjs.org/@types/estree/-/estree-1.0.8.tgz",
      "integrity": "sha512-dWHzHa2WqEXI/O1E9OjrocMTKJl2mSrEolh1Iomrv6U+JuNwaHXsXx9bLu5gG7BUWFIN0skIQJQ/L1rIex4X6w==",
      "dev": true
    },
    "node_modules/@types/resolve": {
      "version": "1.20.2",
      "resolved": "https://registry.npmjs.org/@types/resolve/-/resolve-1.20.2.tgz",
      "integrity": "sha512-60BCwRFOZCQhDncwQdxxeOEEkbc5dIMccYLwbxsS4TUNeVECQ/pBJ0j09mrHOl/JJvpRPGwO9SvE4nR2Nb/a4Q==",
      "dev": true
    },
    "node_modules/babel-plugin-polyfill-corejs2": {
      "version": "0.4.14",
      "resolved": "https://registry.npmjs.org/babel-plugin-polyfill-corejs2/-/babel-plugin-polyfill-corejs2-0.4.14.tgz",
      "integrity": "sha512-Co2Y9wX854ts6U8gAAPXfn0GmAyctHuK8n0Yhfjd6t30g7yvKjspvvOo9yG+z52PZRgFErt7Ka2pYnXCjLKEpg==",
      "dev": true,
      "dependencies": {
        "@babel/compat-data": "^7.27.7",
        "@babel/helper-define-polyfill-provider": "^0.6.5",
        "semver": "^6.3.1"
      },
      "peerDependencies": {
        "@babel/core": "^7.4.0 || ^8.0.0-0 <8.0.0"
      }
    },
    "node_modules/babel-plugin-polyfill-corejs3": {
      "version": "0.13.0",
      "resolved": "https://registry.npmjs.org/babel-plugin-polyfill-corejs3/-/babel-plugin-polyfill-corejs3-0.13.0.tgz",
      "integrity": "sha512-U+GNwMdSFgzVmfhNm8GJUX88AadB3uo9KpJqS3FaqNIPKgySuvMb+bHPsOmmuWyIcuqZj/pzt1RUIUZns4y2+A==",
      "dev": true,
      "dependencies": {
        "@babel/helper-define-polyfill-provider": "^0.6.5",
        "core-js-compat": "^3.43.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.4.0 || ^8.0.0-0 <8.0.0"
      }
    },
    "node_modules/babel-plugin-polyfill-regenerator": {
      "version": "0.6.5",
      "resolved": "https://registry.npmjs.org/babel-plugin-polyfill-regenerator/-/babel-plugin-polyfill-regenerator-0.6.5.tgz",
      "integrity": "sha512-ISqQ2frbiNU9vIJkzg7dlPpznPZ4jOiUQ1uSmB0fEHeowtN3COYRsXr/xexn64NpU13P06jc/L5TgiJXOgrbEg==",
      "dev": true,
      "dependencies": {
        "@babel/helper-define-polyfill-provider": "^0.6.5"
      },
      "peerDependencies": {
        "@babel/core": "^7.4.0 || ^8.0.0-0 <8.0.0"
      }
    },
    "node_modules/baseline-browser-mapping": {
      "version": "2.8.18",
      "resolved": "https://registry.npmjs.org/baseline-browser-mapping/-/baseline-browser-mapping-2.8.18.tgz",
      "integrity": "sha512-UYmTpOBwgPScZpS4A+YbapwWuBwasxvO/2IOHArSsAhL/+ZdmATBXTex3t+l2hXwLVYK382ibr/nKoY9GKe86w==",
      "dev": true,
      "bin": {
        "baseline-browser-mapping": "dist/cli.js"
      }
    },
    "node_modules/browserslist": {
      "version": "4.26.3",
      "resolved": "https://registry.npmjs.org/browserslist/-/browserslist-4.26.3.tgz",
      "integrity": "sha512-lAUU+02RFBuCKQPj/P6NgjlbCnLBMp4UtgTx7vNHd3XSIJF87s9a5rA3aH2yw3GS9DqZAUbOtZdCCiZeVRqt0w==",
      "dev": true,
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/browserslist"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/browserslist"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "peer": true,
      "dependencies": {
        "baseline-browser-mapping": "^2.8.9",
        "caniuse-lite": "^1.0.30001746",
        "electron-to-chromium": "^1.5.227",
        "node-releases": "^2.0.21",
        "update-browserslist-db": "^1.1.3"
      },
      "bin": {
        "browserslist": "cli.js"
      },
      "engines": {
        "node": "^6 || ^7 || ^8 || ^9 || ^10 || ^11 || ^12 || >=13.7"
      }
    },
    "node_modules/caniuse-lite": {
      "version": "1.0.30001751",
      "resolved": "https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30001751.tgz",
      "integrity": "sha512-A0QJhug0Ly64Ii3eIqHu5X51ebln3k4yTUkY1j8drqpWHVreg/VLijN48cZ1bYPiqOQuqpkIKnzr/Ul8V+p6Cw==",
      "dev": true,
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/browserslist"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/caniuse-lite"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ]
    },
    "node_modules/commondir": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/commondir/-/commondir-1.0.1.tgz",
      "integrity": "sha512-W9pAhw0ja1Edb5GVdIF1mjZw/ASI0AlShXM83UUGe2DVr5TdAPEA1OA8m/g8zWp9x6On7gqufY+FatDbC3MDQg==",
      "dev": true
    },
    "node_modules/convert-source-map": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/convert-source-map/-/convert-source-map-2.0.0.tgz",
      "integrity": "sha512-Kvp459HrV2FEJ1CAsi1Ku+MY3kasH19TFykTz2xWmMeq6bk2NU3XXvfJ+Q61m0xktWwt+1HSYf3JZsTms3aRJg==",
      "dev": true
    },
    "node_modules/core-js-compat": {
      "version": "3.46.0",
      "resolved": "https://registry.npmjs.org/core-js-compat/-/core-js-compat-3.46.0.tgz",
      "integrity": "sha512-p9hObIIEENxSV8xIu+V68JjSeARg6UVMG5mR+JEUguG3sI6MsiS1njz2jHmyJDvA+8jX/sytkBHup6kxhM9law==",
      "dev": true,
      "dependencies": {
        "browserslist": "^4.26.3"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/core-js"
      }
    },
    "node_modules/debug": {
      "version": "4.4.3",
      "resolved": "https://registry.npmjs.org/debug/-/debug-4.4.3.tgz",
      "integrity": "sha512-RGwwWnwQvkVfavKVt22FGLw+xYSdzARwm0ru6DhTVA3umU5hZc28V3kO4stgYryrTlLpuvgI9GiijltAjNbcqA==",
      "dev": true,
      "dependencies": {
        "ms": "^2.1.3"
      },
      "engines": {
        "node": ">=6.0"
      },
      "peerDependenciesMeta": {
        "supports-color": {
          "optional": true
        }
      }
    },
    "node_modules/deepmerge": {
      "version": "4.3.1",
      "resolved": "https://registry.npmjs.org/deepmerge/-/deepmerge-4.3.1.tgz",
      "integrity": "sha512-3sUqbMEc77XqpdNO7FRyRog+eW3ph+GYCbj+rK+uYyRMuwsVy0rMiVtPn+QJlKFvWP/1PYpapqYn0Me2knFn+A==",
      "dev": true,
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/electron-to-chromium": {
      "version": "1.5.237",
      "resolved": "https://registry.npmjs.org/electron-to-chromium/-/electron-to-chromium-1.5.237.tgz",
      "integrity": "sha512-icUt1NvfhGLar5lSWH3tHNzablaA5js3HVHacQimfP8ViEBOQv+L7DKEuHdbTZ0SKCO1ogTJTIL1Gwk9S6Qvcg==",
      "dev": true
    },
    "node_modules/escalade": {
      "version": "3.2.0",
      "resolved": "https://registry.npmjs.org/escalade/-/escalade-3.2.0.tgz",
      "integrity": "sha512-WUj2qlxaQtO4g6Pq5c29GTcWGDyd8itL8zTlipgECz3JesAiiOKotd8JU6otB3PACgG6xkJUyVhboMS+bje/jA==",
      "dev": true,
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/estree-walker": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/estree-walker/-/estree-walker-2.0.2.tgz",
      "integrity": "sha512-Rfkk/Mp/DL7JVje3u18FxFujQlTNR2q6QfMSMB7AvCBx91NGj/ba3kCfza0f6dVDbw7YlRf/nDrn7pQrCCyQ/w==",
      "dev": true
    },
    "node_modules/esutils": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/esutils/-/esutils-2.0.3.tgz",
      "integrity": "sha512-kVscqXk4OCp68SZ0dkgEKVi6/8ij300KBWTJq32P/dYeWTSwK41WyTxalN1eRmA5Z9UU/LX9D7FWSmV9SAYx6g==",
      "dev": true,
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/fdir": {
      "version": "6.5.0",
      "resolved": "https://registry.npmjs.org/fdir/-/fdir-6.5.0.tgz",
      "integrity": "sha512-tIbYtZbucOs0BRGqPJkshJUYdL+SDH7dVM8gjy+ERp3WAUjLEFJE+02kanyHtwjWOnwrKYBiwAmM0p4kLJAnXg==",
      "dev": true,
      "engines": {
        "node": ">=12.0.0"
      },
      "peerDependencies": {
        "picomatch": "^3 || ^4"
      },
      "peerDependenciesMeta": {
        "picomatch": {
          "optional": true
        }
      }
    },
    "node_modules/fsevents": {
      "version": "2.3.3",
      "resolved": "https://registry.npmjs.org/fsevents/-/fsevents-2.3.3.tgz",
      "integrity": "sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==",
      "dev": true,
      "hasInstallScript": true,
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": "^8.16.0 || ^10.6.0 || >=11.0.0"
      }
    },
    "node_modules/function-bind": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/function-bind/-/function-bind-1.1.2.tgz",
      "integrity": "sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==",
      "dev": true,
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/gensync": {
      "version": "1.0.0-beta.2",
      "resolved": "https://registry.npmjs.org/gensync/-/gensync-1.0.0-beta.2.tgz",
      "integrity": "sha512-3hN7NaskYvMDLQY55gnW3NQ+mesEAepTqlg+VEbj7zzqEMBVNhzcGYYeqFo/TlYz6eQiFcp1HcsCZO+nGgS8zg==",
      "dev": true,
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/hasown": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/hasown/-/hasown-2.0.2.tgz",
      "integrity": "sha512-0hJU9SCPvmMzIBdZFqNPXWa6dqh7WdH0cII9y+CyS8rG3nL48Bclra9HmKhVVUHyPWNH5Y7xDwAB7bfgSjkUMQ==",
      "dev": true,
      "dependencies": {
        "function-bind": "^1.1.2"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/is-core-module": {
      "version": "2.16.1",
      "resolved": "https://registry.npmjs.org/is-core-module/-/is-core-module-2.16.1.tgz",
      "integrity": "sha512-UfoeMA6fIJ8wTYFEUjelnaGI67v6+N7qXJEvQuIGa99l4xsCruSYOVSQ0uPANn4dAzm8lkYPaKLrrijLq7x23w==",
      "dev": true,
      "dependencies": {
        "hasown": "^2.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-module": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/is-module/-/is-module-1.0.0.tgz",
      "integrity": "sha512-51ypPSPCoTEIN9dy5Oy+h4pShgJmPCygKfyRCISBI+JoWT/2oJvK8QPxmwv7b/p239jXrm9M1mlQbyKJ5A152g==",
      "dev": true
    },
    "node_modules/is-reference": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/is-reference/-/is-reference-1.2.1.tgz",
      "integrity": "sha512-U82MsXXiFIrjCK4otLT+o2NA2Cd2g5MLoOVXUZjIOhLurrRxpEXzI8O0KZHr3IjLvlAH1kTPYSuqer5T9ZVBKQ==",
      "dev": true,
      "dependencies": {
        "@types/estree": "*"
      }
    },
    "node_modules/js-tokens": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/js-tokens/-/js-tokens-4.0.0.tgz",
      "integrity": "sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ==",
      "dev": true
    },
    "node_modules/jsesc": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/jsesc/-/jsesc-3.1.0.tgz",
      "integrity": "sha512-/sM3dO2FOzXjKQhJuo0Q173wf2KOo8t4I8vHy6lF9poUp7bKT0/NHE8fPX23PwfhnykfqnC2xRxOnVw5XuGIaA==",
      "dev": true,
      "bin": {
        "jsesc": "bin/jsesc"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/json5": {
      "version": "2.2.3",
      "resolved": "https://registry.npmjs.org/json5/-/json5-2.2.3.tgz",
      "integrity": "sha512-XmOWe7eyHYH14cLdVPoyg+GOH3rYX++KpzrylJwSW98t3Nk+U8XOl8FWKOgwtzdb8lXGf6zYwDUzeHMWfxasyg==",
      "dev": true,
      "bin": {
        "json5": "lib/cli.js"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/lodash.debounce": {
      "version": "4.0.8",
      "resolved": "https://registry.npmjs.org/lodash.debounce/-/lodash.debounce-4.0.8.tgz",
      "integrity": "sha512-FT1yDzDYEoYWhnSGnpE/4Kj1fLZkDFyqRb7fNt6FdYOSxlUWAtp42Eh6Wb0rGIv/m9Bgo7x4GhQbm5Ys4SG5ow==",
      "dev": true
    },
    "node_modules/lru-cache": {
      "version": "5.1.1",
      "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-5.1.1.tgz",
      "integrity": "sha512-KpNARQA3Iwv+jTA0utUVVbrh+Jlrr1Fv0e56GGzAFOXN7dk/FviaDW8LHmK52DlcH4WP2n6gI8vN1aesBFgo9w==",
      "dev": true,
      "dependencies": {
        "yallist": "^3.0.2"
      }
    },
    "node_modules/magic-string": {
      "version": "0.30.19",
      "resolved": "https://registry.npmjs.org/magic-string/-/magic-string-0.30.19.tgz",
      "integrity": "sha512-2N21sPY9Ws53PZvsEpVtNuSW+ScYbQdp4b9qUaL+9QkHUrGFKo56Lg9Emg5s9V/qrtNBmiR01sYhUOwu3H+VOw==",
      "dev": true,
      "dependencies": {
        "@jridgewell/sourcemap-codec": "^1.5.5"
      }
    },
    "node_modules/ms": {
      "version": "2.1.3",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.3.tgz",
      "integrity": "sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==",
      "dev": true
    },
    "node_modules/nakama-runtime": {
      "version": "1.42.1",
      "resolved": "git+ssh://git@github.com/heroiclabs/nakama-common.git#803c6666268ef00da1979b196605276bf123da85",
      "license": "Apache-2.0"
    },
    "node_modules/node-releases": {
      "version": "2.0.25",
      "resolved": "https://registry.npmjs.org/node-releases/-/node-releases-2.0.25.tgz",
      "integrity": "sha512-4auku8B/vw5psvTiiN9j1dAOsXvMoGqJuKJcR+dTdqiXEK20mMTk1UEo3HS16LeGQsVG6+qKTPM9u/qQ2LqATA==",
      "dev": true
    },
    "node_modules/path-parse": {
      "version": "1.0.7",
      "resolved": "https://registry.npmjs.org/path-parse/-/path-parse-1.0.7.tgz",
      "integrity": "sha512-LDJzPVEEEPR+y48z93A0Ed0yXb8pAByGWo/k5YYdYgpY2/2EsOsksJrq7lOHxryrVOn1ejG6oAp8ahvOIQD8sw==",
      "dev": true
    },
    "node_modules/picocolors": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/picocolors/-/picocolors-1.1.1.tgz",
      "integrity": "sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA==",
      "dev": true
    },
    "node_modules/picomatch": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/picomatch/-/picomatch-4.0.3.tgz",
      "integrity": "sha512-5gTmgEY/sqK6gFXLIsQNH19lWb4ebPDLA4SdLP7dsWkIXHWlG66oPuVvXSGFPppYZz8ZDZq0dYYrbHfBCVUb1Q==",
      "dev": true,
      "peer": true,
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/sponsors/jonschlinkert"
      }
    },
    "node_modules/regenerate": {
      "version": "1.4.2",
      "resolved": "https://registry.npmjs.org/regenerate/-/regenerate-1.4.2.tgz",
      "integrity": "sha512-zrceR/XhGYU/d/opr2EKO7aRHUeiBI8qjtfHqADTwZd6Szfy16la6kqD0MIUs5z5hx6AaKa+PixpPrR289+I0A==",
      "dev": true
    },
    "node_modules/regenerate-unicode-properties": {
      "version": "10.2.2",
      "resolved": "https://registry.npmjs.org/regenerate-unicode-properties/-/regenerate-unicode-properties-10.2.2.tgz",
      "integrity": "sha512-m03P+zhBeQd1RGnYxrGyDAPpWX/epKirLrp8e3qevZdVkKtnCrjjWczIbYc8+xd6vcTStVlqfycTx1KR4LOr0g==",
      "dev": true,
      "dependencies": {
        "regenerate": "^1.4.2"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/regexpu-core": {
      "version": "6.4.0",
      "resolved": "https://registry.npmjs.org/regexpu-core/-/regexpu-core-6.4.0.tgz",
      "integrity": "sha512-0ghuzq67LI9bLXpOX/ISfve/Mq33a4aFRzoQYhnnok1JOFpmE/A2TBGkNVenOGEeSBCjIiWcc6MVOG5HEQv0sA==",
      "dev": true,
      "dependencies": {
        "regenerate": "^1.4.2",
        "regenerate-unicode-properties": "^10.2.2",
        "regjsgen": "^0.8.0",
        "regjsparser": "^0.13.0",
        "unicode-match-property-ecmascript": "^2.0.0",
        "unicode-match-property-value-ecmascript": "^2.2.1"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/regjsgen": {
      "version": "0.8.0",
      "resolved": "https://registry.npmjs.org/regjsgen/-/regjsgen-0.8.0.tgz",
      "integrity": "sha512-RvwtGe3d7LvWiDQXeQw8p5asZUmfU1G/l6WbUXeHta7Y2PEIvBTwH6E2EfmYUK8pxcxEdEmaomqyp0vZZ7C+3Q==",
      "dev": true
    },
    "node_modules/regjsparser": {
      "version": "0.13.0",
      "resolved": "https://registry.npmjs.org/regjsparser/-/regjsparser-0.13.0.tgz",
      "integrity": "sha512-NZQZdC5wOE/H3UT28fVGL+ikOZcEzfMGk/c3iN9UGxzWHMa1op7274oyiUVrAG4B2EuFhus8SvkaYnhvW92p9Q==",
      "dev": true,
      "dependencies": {
        "jsesc": "~3.1.0"
      },
      "bin": {
        "regjsparser": "bin/parser"
      }
    },
    "node_modules/resolve": {
      "version": "1.22.10",
      "resolved": "https://registry.npmjs.org/resolve/-/resolve-1.22.10.tgz",
      "integrity": "sha512-NPRy+/ncIMeDlTAsuqwKIiferiawhefFJtkNSW0qZJEqMEb+qBt/77B/jGeeek+F0uOeN05CDa6HXbbIgtVX4w==",
      "dev": true,
      "dependencies": {
        "is-core-module": "^2.16.0",
        "path-parse": "^1.0.7",
        "supports-preserve-symlinks-flag": "^1.0.0"
      },
      "bin": {
        "resolve": "bin/resolve"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/rollup": {
      "version": "4.52.5",
      "resolved": "https://registry.npmjs.org/rollup/-/rollup-4.52.5.tgz",
      "integrity": "sha512-3GuObel8h7Kqdjt0gxkEzaifHTqLVW56Y/bjN7PSQtkKr0w3V/QYSdt6QWYtd7A1xUtYQigtdUfgj1RvWVtorw==",
      "dev": true,
      "peer": true,
      "dependencies": {
        "@types/estree": "1.0.8"
      },
      "bin": {
        "rollup": "dist/bin/rollup"
      },
      "engines": {
        "node": ">=18.0.0",
        "npm": ">=8.0.0"
      },
      "optionalDependencies": {
        "@rollup/rollup-android-arm-eabi": "4.52.5",
        "@rollup/rollup-android-arm64": "4.52.5",
        "@rollup/rollup-darwin-arm64": "4.52.5",
        "@rollup/rollup-darwin-x64": "4.52.5",
        "@rollup/rollup-freebsd-arm64": "4.52.5",
        "@rollup/rollup-freebsd-x64": "4.52.5",
        "@rollup/rollup-linux-arm-gnueabihf": "4.52.5",
        "@rollup/rollup-linux-arm-musleabihf": "4.52.5",
        "@rollup/rollup-linux-arm64-gnu": "4.52.5",
        "@rollup/rollup-linux-arm64-musl": "4.52.5",
        "@rollup/rollup-linux-loong64-gnu": "4.52.5",
        "@rollup/rollup-linux-ppc64-gnu": "4.52.5",
        "@rollup/rollup-linux-riscv64-gnu": "4.52.5",
        "@rollup/rollup-linux-riscv64-musl": "4.52.5",
        "@rollup/rollup-linux-s390x-gnu": "4.52.5",
        "@rollup/rollup-linux-x64-gnu": "4.52.5",
        "@rollup/rollup-linux-x64-musl": "4.52.5",
        "@rollup/rollup-openharmony-arm64": "4.52.5",
        "@rollup/rollup-win32-arm64-msvc": "4.52.5",
        "@rollup/rollup-win32-ia32-msvc": "4.52.5",
        "@rollup/rollup-win32-x64-gnu": "4.52.5",
        "@rollup/rollup-win32-x64-msvc": "4.52.5",
        "fsevents": "~2.3.2"
      }
    },
    "node_modules/semver": {
      "version": "6.3.1",
      "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.1.tgz",
      "integrity": "sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==",
      "dev": true,
      "bin": {
        "semver": "bin/semver.js"
      }
    },
    "node_modules/supports-preserve-symlinks-flag": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/supports-preserve-symlinks-flag/-/supports-preserve-symlinks-flag-1.0.0.tgz",
      "integrity": "sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==",
      "dev": true,
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/tslib": {
      "version": "2.8.1",
      "resolved": "https://registry.npmjs.org/tslib/-/tslib-2.8.1.tgz",
      "integrity": "sha512-oJFu94HQb+KVduSUQL7wnpmqnfmLsOA/nAh6b6EH0wCEoK0/mPeXU6c3wKDV83MkOuHPRHtSXKKU99IBazS/2w==",
      "dev": true,
      "peer": true
    },
    "node_modules/typescript": {
      "version": "5.9.3",
      "resolved": "https://registry.npmjs.org/typescript/-/typescript-5.9.3.tgz",
      "integrity": "sha512-jl1vZzPDinLr9eUt3J/t7V6FgNEw9QjvBPdysz9KfQDD41fQrC2Y4vKQdiaUpFT4bXlb1RHhLpp8wtm6M5TgSw==",
      "dev": true,
      "peer": true,
      "bin": {
        "tsc": "bin/tsc",
        "tsserver": "bin/tsserver"
      },
      "engines": {
        "node": ">=14.17"
      }
    },
    "node_modules/unicode-canonical-property-names-ecmascript": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/unicode-canonical-property-names-ecmascript/-/unicode-canonical-property-names-ecmascript-2.0.1.tgz",
      "integrity": "sha512-dA8WbNeb2a6oQzAQ55YlT5vQAWGV9WXOsi3SskE3bcCdM0P4SDd+24zS/OCacdRq5BkdsRj9q3Pg6YyQoxIGqg==",
      "dev": true,
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/unicode-match-property-ecmascript": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/unicode-match-property-ecmascript/-/unicode-match-property-ecmascript-2.0.0.tgz",
      "integrity": "sha512-5kaZCrbp5mmbz5ulBkDkbY0SsPOjKqVS35VpL9ulMPfSl0J0Xsm+9Evphv9CoIZFwre7aJoa94AY6seMKGVN5Q==",
      "dev": true,
      "dependencies": {
        "unicode-canonical-property-names-ecmascript": "^2.0.0",
        "unicode-property-aliases-ecmascript": "^2.0.0"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/unicode-match-property-value-ecmascript": {
      "version": "2.2.1",
      "resolved": "https://registry.npmjs.org/unicode-match-property-value-ecmascript/-/unicode-match-property-value-ecmascript-2.2.1.tgz",
      "integrity": "sha512-JQ84qTuMg4nVkx8ga4A16a1epI9H6uTXAknqxkGF/aFfRLw1xC/Bp24HNLaZhHSkWd3+84t8iXnp1J0kYcZHhg==",
      "dev": true,
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/unicode-property-aliases-ecmascript": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/unicode-property-aliases-ecmascript/-/unicode-property-aliases-ecmascript-2.2.0.tgz",
      "integrity": "sha512-hpbDzxUY9BFwX+UeBnxv3Sh1q7HFxj48DTmXchNgRa46lO8uj3/1iEn3MiNUYTg1g9ctIqXCCERn8gYZhHC5lQ==",
      "dev": true,
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/update-browserslist-db": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/update-browserslist-db/-/update-browserslist-db-1.1.3.tgz",
      "integrity": "sha512-UxhIZQ+QInVdunkDAaiazvvT/+fXL5Osr0JZlJulepYu6Jd7qJtDZjlur0emRlT71EN3ScPoE7gvsuIKKNavKw==",
      "dev": true,
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/browserslist"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/browserslist"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "dependencies": {
        "escalade": "^3.2.0",
        "picocolors": "^1.1.1"
      },
      "bin": {
        "update-browserslist-db": "cli.js"
      },
      "peerDependencies": {
        "browserslist": ">= 4.21.0"
      }
    },
    "node_modules/yallist": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/yallist/-/yallist-3.1.1.tgz",
      "integrity": "sha512-a4UGQaWPH59mOXUYnAG2ewncQS4i4F43Tv3JoAM+s2VDAmS9NsK8GpDMLrCHPksFT7h3K6TOoUNn2pb7RoXx4g==",
      "dev": true
    }
  }
}


[T] ts\package.json
Relative Path: ts\package.json
Last Modified: 2025-10-21T19:07:45.7440382Z
====

{
  "name": "ts",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "type": "module",
  "scripts": {
    "build": "rollup -c",
    "type-check": "tsc --noEmit"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "devDependencies": {
    "@babel/core": "^7.28.4",
    "@babel/plugin-external-helpers": "^7.27.1",
    "@babel/preset-env": "^7.28.3",
    "@rollup/plugin-babel": "^6.1.0",
    "@rollup/plugin-commonjs": "^28.0.8",
    "@rollup/plugin-json": "^6.1.0",
    "@rollup/plugin-node-resolve": "^16.0.3",
    "@rollup/plugin-typescript": "^12.1.4",
    "rollup": "^4.52.5",
    "tslib": "^2.8.1",
    "typescript": "^5.9.3"
  },
  "dependencies": {
    "nakama-runtime": "github:heroiclabs/nakama-common"
  },
  "engines": {
    "node": ">=18.19.0"
  }
}


[T] ts\README.md
Relative Path: ts\README.md
Last Modified: 2025-10-21T19:07:45.7423901Z
====

# Nakama TypeScript Modules
Built automatically by Dockerfile

Use `npm run build` to create build in `./Build`


[T] ts\rollup.config.mjs
Relative Path: ts\rollup.config.mjs
Last Modified: 2025-10-21T19:07:45.7450410Z
====

import resolve from "@rollup/plugin-node-resolve";
import commonjs from "@rollup/plugin-commonjs";
import json from "@rollup/plugin-json";
import babel from "@rollup/plugin-babel";
import typescript from "@rollup/plugin-typescript";

const extensions = [".mjs", ".js", ".ts", ".json"];

export default {
  input: "./src/main.ts",
  external: ["nakama-runtime"],
  plugins: [
    // Compile TS to check types
    typescript(),

    // Allows node_modules resolution
    resolve(),

    json(),

    // Resolve CommonJS modules
    commonjs(),

    // Compile TS and build to ES5
    babel({
      extensions: extensions,
      babelHelpers: "bundled",
    }),
  ],
  output: {
    format: "cjs",
    file: "build/index.js",
  },
};


[T] ts\tsconfig.json
Relative Path: ts\tsconfig.json
Last Modified: 2025-10-21T19:07:45.7460384Z
====

{
  "compilerOptions": {
    "noImplicitReturns": true,
    "moduleResolution": "node",
    "esModuleInterop": true,
    "noUnusedLocals": true,
    "removeComments": true,
    "target": "es5",
    "module": "ESNext",
    "strict": false,
  },
  "files": [
    "./node_modules/nakama-runtime/index.d.ts",
  ],
  "include": [
    "src/**/*",
  ],
  "exclude": [
    "node_modules",
    "build"
  ]
}


[T] ts\src\main.ts
Relative Path: ts\src\main.ts
Last Modified: 2025-10-21T19:07:45.7450410Z
====

function InitModule(ctx: nkruntime.Context, logger: nkruntime.Logger, nk: nkruntime.Nakama, initializer: nkruntime.Initializer) {
  logger.info('TypeScript module loaded.');
}

// Reference InitModule to avoid it getting removed on build
!InitModule && InitModule.bind(null);


