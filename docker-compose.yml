version: '3.8'
services:
  cert-init:
    image: 'cockroachdb/cockroach:latest-v23.1'
    env_file: .env
    restart: "no"
    volumes:
      - certs:/certs
    entrypoint: [""]   
    command: [
      "sh", "-c",
      "[ -f /certs/ca.key ] || (
         cockroach cert create-ca --certs-dir=/certs --ca-key=/certs/ca.key && 
         cockroach cert create-node localhost cockroachdb --certs-dir=/certs --ca-key=/certs/ca.key && 
         cockroach cert create-client root --certs-dir=/certs --ca-key=/certs/ca.key
       )"
    ]

  cockroachdb:
    image: 'cockroachdb/cockroach:latest-v23.1'
    command: >
      start
      --certs-dir=/certs 
      --store=attrs=ssd,path=/var/lib/cockroach/
      --listen-addr=0.0.0.0:26257
      --http-addr=0.0.0.0:8080
      --advertise-addr=cockroachdb 
      --join=cockroachdb
    depends_on:
      cert-init:
        condition: service_completed_successfully
    env_file: .env
    volumes:
      - cockroach_data:/var/lib/cockroach
      - certs:/certs
    healthcheck:
      test: ["CMD", "curl", "-f", "--cacert", "/certs/ca.crt", "https://cockroachdb:8080/health?ready=1"]
      interval: 10s
      timeout: 5s
      retries: 5

  db-initializer:
    image: cockroachdb/cockroach:latest-v23.1
    restart: "no"
    depends_on:
      cockroachdb:
        condition: service_healthy
    env_file: .env
    volumes:
      - certs:/certs
    entrypoint: [""]
    command: [
      "sh", "-c",
      "cockroach sql --certs-dir=/certs --host=cockroachdb --execute \"
         CREATE USER IF NOT EXISTS $${DB_USER} WITH PASSWORD '$${DB_PASS}';
         CREATE DATABASE IF NOT EXISTS $${DB_NAME};
         GRANT ALL ON DATABASE $${DB_NAME} TO $${DB_USER};
       \""
      ]
  nakama:
    build:
      context: .
      dockerfile: nakama.Dockerfile
    restart: unless-stopped
    env_file: .env
    depends_on:
      db-initializer:
        condition: service_completed_successfully
    volumes:
      - certs:/certs
    ports:
      - '7349:7349'
      - '7350:7350'
      - '9100:9100'
    healthcheck:
      test: ["CMD", "/nakama/nakama", "healthcheck"]
      interval: 10s
      timeout: 5s
      retries: 5

  prometheus: 
    image: prom/prometheus
    command: ['--config.file=/etc/prometheus/prometheus.yml']
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - '9090:9090'

volumes:
  cockroach_data:
  certs:
